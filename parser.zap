

	.FUNCT	THIS-IS-IT,OBJ
	ZERO?	OBJ /TRUE
	EQUAL?	PRSA,V?WALK \?PRD6
	EQUAL?	PRSO,OBJ /TRUE
?PRD6:	EQUAL?	OBJ,PROTAGONIST /TRUE
	EQUAL?	OBJ,NOT-HERE-OBJECT,ME,GLOBAL-ROOM /TRUE
	FSET?	OBJ,FEMALEBIT \?CCL11
	SET	'P-HER-OBJECT,OBJ
	RETURN	P-HER-OBJECT
?CCL11:	FSET?	OBJ,ACTORBIT \?CCL13
	SET	'P-HIM-OBJECT,OBJ
	RETURN	P-HIM-OBJECT
?CCL13:	SET	'P-IT-OBJECT,OBJ
	RETURN	P-IT-OBJECT


	.FUNCT	PARSER,PTR,WRD,VAL,VERB,OMERGED,OWINNER,OLEN,LEN,DIR,NW,LW,CNT,?TMP2,?TMP1
	SET	'PTR,P-LEXSTART
	SET	'CNT,-1
?PRG1:	IGRTR?	'CNT,P-ITBLLEN /?REP2
	ZERO?	P-OFLAG \?CND6
	GET	P-ITBL,CNT
	PUT	P-OTBL,CNT,STACK
?CND6:	PUT	P-ITBL,CNT,0
	JUMP	?PRG1
?REP2:	SET	'OMERGED,P-MERGED
	SET	'OWINNER,WINNER
	SET	'P-MERGED,FALSE-VALUE
	SET	'P-END-ON-PREP,FALSE-VALUE
	PUT	P-PRSO,P-MATCHLEN,0
	PUT	P-PRSI,P-MATCHLEN,0
	PUT	P-BUTS,P-MATCHLEN,0
	ZERO?	QUOTE-FLAG \?CND8
	EQUAL?	WINNER,PROTAGONIST /?CND8
	SET	'WINNER,PROTAGONIST
	LOC	WINNER
	FSET?	STACK,VEHBIT /?CND12
	LOC	WINNER >HERE
?CND12:	CALL2	LIT?,HERE >LIT
?CND8:	ZERO?	RESERVE-PTR /?CCL16
	SET	'PTR,RESERVE-PTR
	ICALL	STUFF,P-LEXV,RESERVE-LEXV
	ICALL	INBUF-STUFF,P-INBUF,RESERVE-INBUF
	ZERO?	VERBOSITY /?CND17
	EQUAL?	PROTAGONIST,WINNER \?CND17
	CRLF	
?CND17:	SET	'RESERVE-PTR,FALSE-VALUE
	SET	'P-CONT,FALSE-VALUE
	JUMP	?CND14
?CCL16:	ZERO?	P-CONT /?CCL22
	SET	'PTR,P-CONT
	ZERO?	VERBOSITY /?CND14
	EQUAL?	PROTAGONIST,WINNER \?CND14
	CRLF	
	JUMP	?CND14
?CCL22:	SET	'WINNER,PROTAGONIST
	SET	'QUOTE-FLAG,FALSE-VALUE
	LOC	WINNER
	FSET?	STACK,VEHBIT /?CND27
	LOC	WINNER >HERE
?CND27:	CALL2	LIT?,HERE >LIT
	ZERO?	VERBOSITY /?PRG31
	CRLF	
?PRG31:	ICALL1	UPDATE-STATUS-LINE
	PRINTC	62
	PUTB	P-INBUF,1,0
	READ	P-INBUF,P-LEXV
	GETB	P-LEXV,P-LEXWORDS >P-INPUT-WORDS
?CND14:	GETB	P-LEXV,P-LEXWORDS >P-LEN
	ZERO?	P-LEN \?CCL35
	PRINTI	"[Come again?]"
	CRLF	
	RFALSE	
?CCL35:	GET	P-LEXV,PTR
	EQUAL?	STACK,W?OOPS,W?O \?CCL37
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	EQUAL?	STACK,W?PERIOD,W?COMMA \?CND38
	ADD	PTR,P-LEXELEN >PTR
	DEC	'P-LEN
?CND38:	GRTR?	P-LEN,1 /?CCL42
	ICALL2	CANT-USE-THAT-WAY,STR?6
	RFALSE	
?CCL42:	GET	OOPS-TABLE,O-PTR
	ZERO?	STACK /?CCL44
	GRTR?	P-LEN,2 \?CND45
	PRINTI	"[Warning: Only the first word after OOPS is used.]"
	CRLF	
?CND45:	GET	OOPS-TABLE,O-PTR >?TMP1
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	PUT	AGAIN-LEXV,?TMP1,STACK
	SET	'WINNER,OWINNER
	MUL	PTR,P-LEXELEN
	ADD	STACK,6
	GETB	P-LEXV,STACK >?TMP2
	MUL	PTR,P-LEXELEN
	ADD	STACK,7
	GETB	P-LEXV,STACK >?TMP1
	GET	OOPS-TABLE,O-PTR
	MUL	STACK,P-LEXELEN
	ADD	STACK,3
	ICALL	INBUF-ADD,?TMP2,?TMP1,STACK
	ICALL	STUFF,P-LEXV,AGAIN-LEXV
	GETB	P-LEXV,P-LEXWORDS >P-LEN
	GET	OOPS-TABLE,O-START >PTR
	ICALL	INBUF-STUFF,P-INBUF,OOPS-INBUF
	JUMP	?CND33
?CCL44:	PUT	OOPS-TABLE,O-END,FALSE-VALUE
	PRINTI	"[There was no word to replace!]"
	CRLF	
	RFALSE	
?CCL37:	ZERO?	P-CONT \?CND33
	PUT	OOPS-TABLE,O-END,FALSE-VALUE
?CND33:	SET	'P-CONT,FALSE-VALUE
	GET	P-LEXV,PTR
	EQUAL?	STACK,W?AGAIN,W?G \?CCL50
	ZERO?	P-OFLAG /?CCL53
	ICALL2	CANT-USE-THAT-WAY,STR?7
	RFALSE	
?CCL53:	ZERO?	P-WON \?CCL55
	PRINTI	"[That would just repeat a mistake!]"
	CRLF	
	RFALSE	
?CCL55:	EQUAL?	OWINNER,PROTAGONIST /?CCL57
	CALL2	VISIBLE?,OWINNER
	ZERO?	STACK \?CCL57
	PRINTC	91
	PRINT	YOU-CANT
	PRINTI	"see "
	ICALL2	DPRINT,OWINNER
	PRINTI	" any more.]"
	CRLF	
	RFALSE	
?CCL57:	GRTR?	P-LEN,1 \?CCL61
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	EQUAL?	STACK,W?PERIOD,W?COMMA,W?THEN /?CTR63
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	EQUAL?	STACK,W?AND \?CCL64
?CTR63:	ADD	PTR,4 >PTR
	GETB	P-LEXV,P-LEXWORDS
	SUB	STACK,2
	PUTB	P-LEXV,P-LEXWORDS,STACK
	JUMP	?CND51
?CCL64:	ICALL1	RECOGNIZE
	RFALSE	
?CCL61:	ADD	PTR,P-LEXELEN >PTR
	GETB	P-LEXV,P-LEXWORDS
	SUB	STACK,1
	PUTB	P-LEXV,P-LEXWORDS,STACK
?CND51:	GETB	P-LEXV,P-LEXWORDS
	GRTR?	STACK,0 \?CCL69
	ICALL	STUFF,RESERVE-LEXV,P-LEXV
	ICALL	INBUF-STUFF,RESERVE-INBUF,P-INBUF
	SET	'RESERVE-PTR,PTR
	JUMP	?CND67
?CCL69:	SET	'RESERVE-PTR,FALSE-VALUE
?CND67:	SET	'WINNER,OWINNER
	SET	'P-MERGED,OMERGED
	ICALL	INBUF-STUFF,P-INBUF,OOPS-INBUF
	ICALL	STUFF,P-LEXV,AGAIN-LEXV
	SET	'CNT,-1
	SET	'DIR,AGAIN-DIR
?PRG70:	IGRTR?	'CNT,P-ITBLLEN /?CND48
	GET	P-OTBL,CNT
	PUT	P-ITBL,CNT,STACK
	JUMP	?PRG70
?CCL50:	ICALL	STUFF,AGAIN-LEXV,P-LEXV
	ICALL	INBUF-STUFF,OOPS-INBUF,P-INBUF
	PUT	OOPS-TABLE,O-START,PTR
	MUL	4,P-LEN
	PUT	OOPS-TABLE,O-LENGTH,STACK
	GETB	P-LEXV,P-LEXWORDS
	MUL	P-LEXELEN,STACK
	ADD	PTR,STACK
	MUL	2,STACK >LEN
	GET	OOPS-TABLE,O-END
	ZERO?	STACK \?CND75
	SUB	LEN,1
	GETB	P-LEXV,STACK >?TMP1
	SUB	LEN,2
	GETB	P-LEXV,STACK
	ADD	?TMP1,STACK
	PUT	OOPS-TABLE,O-END,STACK
?CND75:	SET	'RESERVE-PTR,FALSE-VALUE
	SET	'LEN,P-LEN
	SET	'P-NCN,0
	SET	'P-GETFLAGS,0
?PRG77:	DLESS?	'P-LEN,0 \?CCL81
	SET	'QUOTE-FLAG,FALSE-VALUE
	JUMP	?CND48
?CCL81:	GET	P-LEXV,PTR >WRD
	CALL2	NAUGHTY-WORD?,WRD
	ZERO?	STACK \FALSE
	GET	P-LEXV,PTR >WRD
	ZERO?	WRD \?CTR84
	CALL2	NUMBER?,PTR >WRD
	ZERO?	WRD /?CCL85
?CTR84:	CALL2	NEXT-WORD,PTR >NW
	EQUAL?	WRD,W?TO \?CCL90
	EQUAL?	VERB,ACT?TELL,ACT?ASK \?CCL90
	CALL	WT?,NW,64,1
	ZERO?	STACK /?CCL90
	PUT	P-ITBL,P-VERB,ACT?TELL
	SET	'WRD,W?QUOTE
	JUMP	?CND88
?CCL90:	EQUAL?	WRD,W?THEN \?CND88
	GRTR?	P-LEN,0 \?CND88
	ZERO?	VERB \?CND88
	ZERO?	QUOTE-FLAG \?CND88
	PUT	P-ITBL,P-VERB,ACT?TELL
	PUT	P-ITBL,P-VERBN,0
	SET	'WRD,W?QUOTE
?CND88:	EQUAL?	WRD,W?THEN,W?PERIOD /?CTR100
	EQUAL?	WRD,W?QUOTE \?CCL101
?CTR100:	EQUAL?	WRD,W?QUOTE \?CND104
	ZERO?	QUOTE-FLAG /?CCL108
	SET	'QUOTE-FLAG,FALSE-VALUE
	JUMP	?CND104
?CCL108:	SET	'QUOTE-FLAG,TRUE-VALUE
?CND104:	ZERO?	P-LEN /?PEN109
	ADD	PTR,P-LEXELEN >P-CONT
?PEN109:	PUTB	P-LEXV,P-LEXWORDS,P-LEN
	JUMP	?CND48
?CCL101:	CALL	WT?,WRD,16,3 >VAL
	ZERO?	VAL /?CCL112
	EQUAL?	VERB,FALSE-VALUE,ACT?WALK,ACT?GO \?CCL112
	EQUAL?	LEN,1 /?CTR111
	EQUAL?	LEN,2 \?PRD118
	EQUAL?	VERB,ACT?WALK,ACT?GO /?CTR111
?PRD118:	EQUAL?	NW,W?THEN,W?PERIOD,W?QUOTE \?PRD121
	LESS?	LEN,2 \?CTR111
?PRD121:	ZERO?	QUOTE-FLAG /?PRD124
	EQUAL?	LEN,2 \?PRD124
	EQUAL?	NW,W?QUOTE /?CTR111
?PRD124:	GRTR?	LEN,2 \?CCL112
	EQUAL?	NW,W?COMMA,W?AND \?CCL112
?CTR111:	SET	'DIR,VAL
	EQUAL?	NW,W?COMMA,W?AND \?CND130
	ADD	PTR,P-LEXELEN
	ICALL	CHANGE-LEXV,STACK,W?THEN
?CND130:	GRTR?	LEN,2 /?CND79
	SET	'QUOTE-FLAG,FALSE-VALUE
	JUMP	?CND48
?CCL112:	CALL	WT?,WRD,64,1 >VAL
	ZERO?	VAL /?CCL135
	ZERO?	VERB \?CCL135
	SET	'P-PRSA-WORD,WRD
	SET	'VERB,VAL
	PUT	P-ITBL,P-VERB,VAL
	PUT	P-ITBL,P-VERBN,P-VTBL
	PUT	P-VTBL,0,WRD
	MUL	PTR,2
	ADD	STACK,2 >CNT
	GETB	P-LEXV,CNT
	PUTB	P-VTBL,2,STACK
	ADD	CNT,1
	GETB	P-LEXV,STACK
	PUTB	P-VTBL,3,STACK
	JUMP	?CND79
?CCL135:	CALL	WT?,WRD,8,0 >VAL
	ZERO?	VAL \?CTR138
	EQUAL?	WRD,W?ALL,W?ONE,W?BOTH /?CTR138
	EQUAL?	WRD,W?EVERYTHING /?CTR138
	CALL	WT?,WRD,32
	ZERO?	STACK \?CTR138
	CALL	WT?,WRD,128
	ZERO?	STACK /?CCL139
?CTR138:	GRTR?	P-LEN,0 \?CCL146
	EQUAL?	NW,W?OF \?CCL146
	ZERO?	VAL \?CCL146
	EQUAL?	WRD,W?ALL,W?ONE,W?A /?CCL146
	EQUAL?	WRD,W?BOTH,W?EVERYTHING \?CND79
?CCL146:	ZERO?	VAL /?CCL153
	ZERO?	P-LEN /?CTR152
	EQUAL?	NW,W?THEN,W?PERIOD \?CCL153
?CTR152:	SET	'P-END-ON-PREP,TRUE-VALUE
	LESS?	P-NCN,2 \?CND79
	PUT	P-ITBL,P-PREP1,VAL
	PUT	P-ITBL,P-PREP1N,WRD
	JUMP	?CND79
?CCL153:	EQUAL?	P-NCN,2 \?CCL161
	PRINTI	"[There were too many nouns in that sentence.]"
	CRLF	
	RFALSE	
?CCL161:	INC	'P-NCN
	CALL	CLAUSE,PTR,VAL,WRD >PTR
	ZERO?	PTR /FALSE
	LESS?	PTR,0 \?CND79
	SET	'QUOTE-FLAG,FALSE-VALUE
?CND48:	PUT	OOPS-TABLE,O-PTR,FALSE-VALUE
	ZERO?	DIR /?CND172
	SET	'PRSA,V?WALK
	SET	'PRSO,DIR
	SET	'P-OFLAG,FALSE-VALUE
	SET	'P-WALK-DIR,DIR
	SET	'AGAIN-DIR,DIR
	RTRUE	
?CCL139:	CALL	WT?,WRD,4
	ZERO?	STACK \?CND79
	EQUAL?	VERB,ACT?TELL \?CCL168
	CALL	WT?,WRD,64,1
	ZERO?	STACK /?CCL168
	EQUAL?	WINNER,PROTAGONIST \?CCL168
	ICALL2	SEE-MANUAL,STR?8
	RFALSE	
?CCL168:	ICALL2	CANT-USE,PTR
	RFALSE	
?CCL85:	ICALL2	UNKNOWN-WORD,PTR
	RFALSE	
?CND79:	SET	'LW,WRD
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?PRG77
?CND172:	SET	'P-WALK-DIR,FALSE-VALUE
	SET	'AGAIN-DIR,FALSE-VALUE
	ZERO?	P-OFLAG /?CND174
	ICALL1	ORPHAN-MERGE
?CND174:	CALL1	SYNTAX-CHECK
	ZERO?	STACK /FALSE
	CALL1	SNARF-OBJECTS
	ZERO?	STACK /FALSE
	CALL1	MANY-CHECK
	ZERO?	STACK /FALSE
	CALL1	TAKE-CHECK
	ZERO?	STACK \TRUE
	RFALSE	


	.FUNCT	CHANGE-LEXV,PTR,WRD,PTRS?,X,Y,Z
	ZERO?	PTRS? /?CND1
	SUB	PTR,P-LEXELEN
	MUL	2,STACK
	ADD	2,STACK >X
	GETB	P-LEXV,X >Y
	MUL	2,PTR
	ADD	2,STACK >Z
	PUTB	P-LEXV,Z,Y
	PUTB	AGAIN-LEXV,Z,Y
	ADD	1,X
	GETB	P-LEXV,STACK >Y
	MUL	2,PTR
	ADD	3,STACK >Z
	PUTB	P-LEXV,Z,Y
	PUTB	AGAIN-LEXV,Z,Y
?CND1:	PUT	P-LEXV,PTR,WRD
	PUT	AGAIN-LEXV,PTR,WRD
	RTRUE	


	.FUNCT	STUFF,DEST,SRC,MAX,PTR,CTR,BPTR
	ASSIGNED?	'MAX /?CND1
	SET	'MAX,29
?CND1:	SET	'PTR,P-LEXSTART
	SET	'CTR,1
	GETB	SRC,0
	PUTB	DEST,0,STACK
	GETB	SRC,1
	PUTB	DEST,1,STACK
?PRG3:	GET	SRC,PTR
	PUT	DEST,PTR,STACK
	MUL	PTR,2
	ADD	STACK,2 >BPTR
	GETB	SRC,BPTR
	PUTB	DEST,BPTR,STACK
	MUL	PTR,2
	ADD	STACK,3 >BPTR
	GETB	SRC,BPTR
	PUTB	DEST,BPTR,STACK
	ADD	PTR,P-LEXELEN >PTR
	IGRTR?	'CTR,MAX \?PRG3
	RTRUE	


	.FUNCT	INBUF-STUFF,DEST,SRC,CNT
	SET	'CNT,-1
?PRG1:	IGRTR?	'CNT,P-INBUF-LENGTH /TRUE
	GETB	SRC,CNT
	PUTB	DEST,CNT,STACK
	JUMP	?PRG1


	.FUNCT	INBUF-ADD,LEN,BEG,SLOT,DBEG,CTR,TMP,?TMP1
	GET	OOPS-TABLE,O-END >TMP
	ZERO?	TMP /?CCL3
	SET	'DBEG,TMP
	JUMP	?CND1
?CCL3:	GET	OOPS-TABLE,O-LENGTH >TMP
	GETB	AGAIN-LEXV,TMP >?TMP1
	ADD	TMP,1
	GETB	AGAIN-LEXV,STACK
	ADD	?TMP1,STACK >DBEG
?CND1:	ADD	DBEG,LEN
	PUT	OOPS-TABLE,O-END,STACK
?PRG4:	ADD	DBEG,CTR >?TMP1
	ADD	BEG,CTR
	GETB	P-INBUF,STACK
	PUTB	OOPS-INBUF,?TMP1,STACK
	INC	'CTR
	EQUAL?	CTR,LEN \?PRG4
	PUTB	AGAIN-LEXV,SLOT,DBEG
	SUB	SLOT,1
	PUTB	AGAIN-LEXV,STACK,LEN
	RTRUE	


	.FUNCT	WT?,PTR,BIT,B1,OFFS,TYP
	ASSIGNED?	'B1 /?CND1
	SET	'B1,5
?CND1:	SET	'OFFS,P-P1OFF
	GETB	PTR,P-PSOFF >TYP
	BTST	TYP,BIT \FALSE
	GRTR?	B1,4 /TRUE
	BAND	TYP,P-P1BITS >TYP
	EQUAL?	TYP,B1 /?CND9
	INC	'OFFS
?CND9:	GETB	PTR,OFFS
	RSTACK	


	.FUNCT	NEXT-WORD,PTR,NW
	ZERO?	P-LEN /FALSE
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK >NW
	ZERO?	NW /?CCL6
	RETURN	NW
?CCL6:	ADD	PTR,P-LEXELEN
	CALL2	NUMBER?,STACK
	RSTACK	


	.FUNCT	CLAUSE,PTR,VAL,WRD,OFF,NUM,ANDFLG,FIRST??,NW,LW,?TMP1
	SET	'FIRST??,TRUE-VALUE
	SUB	P-NCN,1
	MUL	STACK,2 >OFF
	ZERO?	VAL /?CCL3
	ADD	P-PREP1,OFF >NUM
	PUT	P-ITBL,NUM,VAL
	ADD	NUM,1
	PUT	P-ITBL,STACK,WRD
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?CND1
?CCL3:	INC	'P-LEN
?CND1:	ZERO?	P-LEN \?CND4
	DEC	'P-NCN
	RETURN	-1
?CND4:	ADD	P-NC1,OFF >NUM
	MUL	PTR,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,NUM,STACK
?PRG6:	DLESS?	'P-LEN,0 \?CND8
	ADD	NUM,1 >?TMP1
	MUL	PTR,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,?TMP1,STACK
	RETURN	-1
?CND8:	GET	P-LEXV,PTR >WRD
	CALL2	NAUGHTY-WORD?,WRD
	ZERO?	STACK \FALSE
	ZERO?	WRD \?CTR13
	CALL2	NUMBER?,PTR >WRD
	ZERO?	WRD /?CCL14
?CTR13:	CALL2	NEXT-WORD,PTR >NW
	ZERO?	FIRST?? /?CCL19
	EQUAL?	WRD,W?THE,W?A,W?AN /?CTR18
	ZERO?	VAL /?CCL19
	CALL	WT?,WRD,8
	ZERO?	STACK /?CCL19
	CALL	WT?,WRD,32
	ZERO?	STACK \?CCL19
?CTR18:	GET	P-ITBL,NUM
	ADD	STACK,4
	PUT	P-ITBL,NUM,STACK
	JUMP	?CND10
?CCL19:	EQUAL?	WRD,W?AND,W?COMMA \?CCL28
	SET	'ANDFLG,TRUE-VALUE
	JUMP	?CND10
?CCL28:	EQUAL?	WRD,W?ALL,W?ONE,W?BOTH /?CTR29
	EQUAL?	WRD,W?EVERYTHING \?CCL30
?CTR29:	EQUAL?	NW,W?OF \?CND10
	DEC	'P-LEN
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?CND10
?CCL30:	EQUAL?	WRD,W?THEN,W?PERIOD /?CTR35
	CALL	WT?,WRD,8
	ZERO?	STACK /?CCL36
	GET	P-ITBL,P-VERB
	ZERO?	STACK /?CCL36
	ZERO?	FIRST?? \?CCL36
?CTR35:	INC	'P-LEN
	ADD	NUM,1 >?TMP1
	MUL	PTR,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,?TMP1,STACK
	SUB	PTR,P-LEXELEN
	RSTACK	
?CCL36:	ZERO?	ANDFLG /?CCL43
	GET	P-ITBL,P-VERB
	ZERO?	STACK \?CCL43
	SUB	PTR,4 >PTR
	ADD	PTR,2
	ICALL	CHANGE-LEXV,STACK,W?THEN
	ADD	P-LEN,2 >P-LEN
	JUMP	?CND10
?CCL43:	CALL	WT?,WRD,128
	ZERO?	STACK /?CCL47
	GRTR?	P-LEN,0 \?CCL50
	EQUAL?	NW,W?OF \?CCL50
	EQUAL?	WRD,W?ALL,W?EVERYTHING,W?ONE \?CND10
?CCL50:	GET	P-ITBL,P-VERB
	EQUAL?	STACK,ACT?SHOW,ACT?HAND,ACT?FEED \?CCL54
	EQUAL?	WRD,W?HER \?CCL54
	EQUAL?	NW,W?SWORD /?CND10
?CCL54:	CALL	WT?,WRD,32
	ZERO?	STACK /?CCL58
	ZERO?	NW /?CCL58
	EQUAL?	NW,W?HIS,W?HER,W?MY /?CCL58
	CALL	WT?,NW,128
	ZERO?	STACK \?PRD63
	CALL	WT?,NW,32
	ZERO?	STACK /?CCL58
?PRD63:	GET	P-ITBL,P-VERB
	EQUAL?	STACK,ACT?SHOW,ACT?HAND,ACT?FEED \?CND10
?CCL58:	ZERO?	ANDFLG \?CCL67
	EQUAL?	NW,W?BUT,W?EXCEPT /?CCL67
	EQUAL?	NW,W?AND,W?COMMA /?CCL67
	ADD	NUM,1 >?TMP1
	ADD	PTR,2
	MUL	STACK,2
	ADD	P-LEXV,STACK
	PUT	P-ITBL,?TMP1,STACK
	RETURN	PTR
?CCL67:	SET	'ANDFLG,FALSE-VALUE
	JUMP	?CND10
?CCL47:	CALL	WT?,WRD,32
	ZERO?	STACK \?CND10
	CALL	WT?,WRD,4
	ZERO?	STACK \?CND10
	CALL	WT?,WRD,8
	ZERO?	STACK \?CND10
	ICALL2	CANT-USE,PTR
	RFALSE	
?CCL14:	ICALL2	UNKNOWN-WORD,PTR
	RFALSE	
?CND10:	SET	'LW,WRD
	SET	'FIRST??,FALSE-VALUE
	ADD	PTR,P-LEXELEN >PTR
	JUMP	?PRG6


	.FUNCT	NUMBER?,PTR,CNT,BPTR,CHR,SUM,CCTR,TMP,XPTR,?TMP1
	MUL	PTR,2
	ADD	P-LEXV,STACK
	GETB	STACK,2 >CNT
	MUL	PTR,2
	ADD	P-LEXV,STACK
	GETB	STACK,3 >BPTR
?PRG1:	GRTR?	SUM,9999 /FALSE
	DLESS?	'CNT,0 /?REP2
	GETB	P-INBUF,BPTR >CHR
	LESS?	CHR,58 \?CCL10
	GRTR?	CHR,47 \?CCL10
	MUL	SUM,10 >?TMP1
	SUB	CHR,48
	ADD	?TMP1,STACK >SUM
	JUMP	?CND8
?CCL10:	EQUAL?	CHR,35 \FALSE
?CND8:	INC	'BPTR
	JUMP	?PRG1
?REP2:	ICALL	CHANGE-LEXV,PTR,W?NUMBER
	ADD	PTR,P-LEXELEN
	GET	P-LEXV,STACK
	EQUAL?	STACK,W?COMMA \?CND14
	GRTR?	P-LEN,1 \?CND14
	ADD	PTR,4 >XPTR
	CALL2	AFTER-COMMA-CHECK,XPTR >TMP
	ZERO?	TMP /?CND14
	MUL	PTR,2
	ADD	STACK,2
	GETB	P-LEXV,STACK >CCTR
	MUL	XPTR,2
	ADD	STACK,2
	GETB	P-LEXV,STACK
	ADD	CCTR,STACK >CCTR
	INC	'CCTR
	MUL	PTR,2
	ADD	STACK,2
	PUTB	P-LEXV,STACK,CCTR
	EQUAL?	TMP,1000 \?CND20
	SET	'TMP,0
?CND20:	MUL	1000,SUM
	ADD	STACK,TMP >SUM
	SUB	P-LEN,2 >CCTR
?PRG22:	DLESS?	'CCTR,0 /?REP23
	ADD	PTR,P-LEXELEN >PTR
	ADD	PTR,4 >XPTR
	GET	P-LEXV,XPTR
	ICALL	CHANGE-LEXV,PTR,STACK
	MUL	PTR,2
	ADD	STACK,2 >?TMP1
	MUL	XPTR,2
	ADD	STACK,2
	GETB	P-LEXV,STACK
	PUTB	P-LEXV,?TMP1,STACK
	MUL	PTR,2
	ADD	STACK,3 >?TMP1
	MUL	XPTR,2
	ADD	STACK,3
	GETB	P-LEXV,STACK
	PUTB	P-LEXV,?TMP1,STACK
	JUMP	?PRG22
?REP23:	SUB	P-LEN,2 >P-LEN
	GETB	P-LEXV,P-LEXWORDS
	SUB	STACK,2
	PUTB	P-LEXV,P-LEXWORDS,STACK
?CND14:	GRTR?	SUM,10000 /FALSE
	SET	'P-NUMBER,SUM
	RETURN	W?NUMBER


	.FUNCT	AFTER-COMMA-CHECK,PTR,CNT,BPTR,CCTR,CHR,SUM,?TMP1
	MUL	PTR,2
	ADD	P-LEXV,STACK
	GETB	STACK,2 >CNT
	MUL	PTR,2
	ADD	P-LEXV,STACK
	GETB	STACK,3 >BPTR
?PRG1:	DLESS?	'CNT,0 /?REP2
	GETB	P-INBUF,BPTR >CHR
	IGRTR?	'CCTR,3 /?REP2
	LESS?	CHR,58 \FALSE
	GRTR?	CHR,47 \FALSE
	MUL	SUM,10 >?TMP1
	SUB	CHR,48
	ADD	?TMP1,STACK >SUM
	INC	'BPTR
	JUMP	?PRG1
?REP2:	EQUAL?	CCTR,3 \FALSE
	ZERO?	SUM /?CTR16
	RETURN	SUM
?CTR16:	RETURN	1000


	.FUNCT	ORPHAN-MERGE,CNT,TEMP,VERB,BEG,END,ADJ,WRD,?TMP1
	SET	'CNT,-1
	SET	'P-OFLAG,FALSE-VALUE
	GET	P-ITBL,P-VERBN
	GET	STACK,0 >WRD
	CALL	WT?,WRD,64,1 >?TMP1
	GET	P-OTBL,P-VERB
	EQUAL?	?TMP1,STACK /?CTR2
	CALL	WT?,WRD,32
	ZERO?	STACK /?CCL3
?CTR2:	SET	'ADJ,TRUE-VALUE
	JUMP	?CND1
?CCL3:	CALL	WT?,WRD,128
	ZERO?	STACK /?CND1
	ZERO?	P-NCN \?CND1
	PUT	P-ITBL,P-VERB,0
	PUT	P-ITBL,P-VERBN,0
	ADD	P-LEXV,2
	PUT	P-ITBL,P-NC1,STACK
	ADD	P-LEXV,6
	PUT	P-ITBL,P-NC1L,STACK
	SET	'P-NCN,1
?CND1:	GET	P-ITBL,P-VERB >VERB
	ZERO?	VERB /?CCL11
	ZERO?	ADJ \?CCL11
	GET	P-OTBL,P-VERB
	EQUAL?	VERB,STACK \FALSE
?CCL11:	EQUAL?	P-NCN,2 /FALSE
	GET	P-OTBL,P-NC1
	EQUAL?	STACK,1 \?CCL18
	GET	P-ITBL,P-PREP1 >TEMP
	GET	P-OTBL,P-PREP1
	EQUAL?	TEMP,STACK /?CTR20
	ZERO?	TEMP \FALSE
?CTR20:	ZERO?	ADJ /?CCL26
	ADD	P-LEXV,2
	PUT	P-OTBL,P-NC1,STACK
	GET	P-ITBL,P-NC1L
	ZERO?	STACK \?CND27
	ADD	P-LEXV,6
	PUT	P-ITBL,P-NC1L,STACK
?CND27:	ZERO?	P-NCN \?CND24
	SET	'P-NCN,1
	JUMP	?CND24
?CCL26:	GET	P-ITBL,P-NC1
	PUT	P-OTBL,P-NC1,STACK
?CND24:	GET	P-ITBL,P-NC1L
	PUT	P-OTBL,P-NC1L,STACK
	JUMP	?CND9
?CCL18:	GET	P-OTBL,P-NC2
	EQUAL?	STACK,1 \?CCL32
	GET	P-ITBL,P-PREP1 >TEMP
	GET	P-OTBL,P-PREP2
	EQUAL?	TEMP,STACK /?CTR34
	ZERO?	TEMP \FALSE
?CTR34:	ZERO?	ADJ /?CND38
	ADD	P-LEXV,2
	PUT	P-ITBL,P-NC1,STACK
	GET	P-ITBL,P-NC1L
	ZERO?	STACK \?CND38
	ADD	P-LEXV,6
	PUT	P-ITBL,P-NC1L,STACK
?CND38:	GET	P-ITBL,P-NC1
	PUT	P-OTBL,P-NC2,STACK
	GET	P-ITBL,P-NC1L
	PUT	P-OTBL,P-NC2L,STACK
	SET	'P-NCN,2
	JUMP	?CND9
?CCL32:	ZERO?	P-ACLAUSE /?CND9
	EQUAL?	P-NCN,1 /?CCL45
	ZERO?	ADJ \?CCL45
	SET	'P-ACLAUSE,FALSE-VALUE
	RFALSE	
?CCL45:	GET	P-ITBL,P-NC1 >BEG
	ZERO?	ADJ /?CND48
	ADD	P-LEXV,2 >BEG
	SET	'ADJ,FALSE-VALUE
?CND48:	GET	P-ITBL,P-NC1L >END
?PRG50:	GET	BEG,0 >WRD
	EQUAL?	BEG,END \?CCL54
	ZERO?	ADJ /?CCL57
	ICALL2	CLAUSE-WIN,ADJ
	JUMP	?CND9
?CCL57:	SET	'P-ACLAUSE,FALSE-VALUE
	RFALSE	
?CCL54:	EQUAL?	WRD,W?ALL,W?EVERYTHING,W?ONE /?CTR58
	GETB	WRD,P-PSOFF
	BTST	STACK,32 \?CCL59
	CALL	ADJ-CHECK,WRD,ADJ
	ZERO?	STACK /?CCL59
?CTR58:	SET	'ADJ,WRD
?CND52:	ADD	BEG,P-WORDLEN >BEG
	ZERO?	END \?PRG50
	SET	'END,BEG
	SET	'P-NCN,1
	SUB	BEG,4
	PUT	P-ITBL,P-NC1,STACK
	PUT	P-ITBL,P-NC1L,BEG
	JUMP	?PRG50
?CCL59:	EQUAL?	WRD,W?ONE \?CCL65
	ICALL2	CLAUSE-WIN,ADJ
	JUMP	?CND9
?CCL65:	GETB	WRD,P-PSOFF
	BTST	STACK,128 \?CND52
	EQUAL?	WRD,P-ANAM \?CCL69
	ICALL2	CLAUSE-WIN,ADJ
	JUMP	?CND9
?CCL69:	ICALL1	CLAUSE-WIN
?CND9:	GET	P-OVTBL,0
	PUT	P-VTBL,0,STACK
	GETB	P-OVTBL,2
	PUTB	P-VTBL,2,STACK
	GETB	P-OVTBL,3
	PUTB	P-VTBL,3,STACK
	PUT	P-OTBL,P-VERBN,P-VTBL
	PUTB	P-VTBL,2,0
?PRG72:	IGRTR?	'CNT,P-ITBLLEN \?CCL76
	SET	'P-MERGED,TRUE-VALUE
	RTRUE	
?CCL76:	GET	P-OTBL,CNT
	PUT	P-ITBL,CNT,STACK
	JUMP	?PRG72


	.FUNCT	CLAUSE-WIN,ADJ
	ZERO?	ADJ /?CCL3
	GET	P-OTBL,P-VERB
	PUT	P-ITBL,P-VERB,STACK
	JUMP	?CND1
?CCL3:	SET	'ADJ,TRUE-VALUE
?CND1:	PUT	P-CCTBL,CC-SBPTR,P-ACLAUSE
	ADD	P-ACLAUSE,1
	PUT	P-CCTBL,CC-SEPTR,STACK
	EQUAL?	P-ACLAUSE,P-NC1 \?CCL6
	PUT	P-CCTBL,CC-OCLAUSE,P-OCL1
	JUMP	?CND4
?CCL6:	PUT	P-CCTBL,CC-OCLAUSE,P-OCL2
?CND4:	ICALL	CLAUSE-COPY,P-OTBL,P-OTBL,ADJ
	GET	P-OTBL,P-NC2
	ZERO?	STACK /?PEN7
	SET	'P-NCN,2
?PEN7:	SET	'P-ACLAUSE,FALSE-VALUE
	RTRUE	


	.FUNCT	WORD-PRINT,CNT,BUF
?PRG1:	DLESS?	'CNT,0 /TRUE
	GETB	P-INBUF,BUF
	PRINTC	STACK
	INC	'BUF
	JUMP	?PRG1


	.FUNCT	UNKNOWN-WORD,PTR,BUF,?TMP1
	PUT	OOPS-TABLE,O-PTR,PTR
	PRINTI	"[I don't know the word """
	MUL	PTR,2 >BUF
	ADD	P-LEXV,BUF
	GETB	STACK,2 >?TMP1
	ADD	P-LEXV,BUF
	GETB	STACK,3
	ICALL	WORD-PRINT,?TMP1,STACK
	PRINTI	".""]"
	CRLF	
	SET	'QUOTE-FLAG,FALSE-VALUE
	SET	'P-OFLAG,FALSE-VALUE
	RETURN	P-OFLAG


	.FUNCT	CANT-USE,PTR,FOR-EACH-OTHER,BUF,?TMP1
	PRINTI	"[You used the word """
	ZERO?	FOR-EACH-OTHER /?CCL3
	EQUAL?	PTR,W?EACH \?CCL6
	PRINTI	"each"
	JUMP	?CND1
?CCL6:	PRINTI	"other"
	JUMP	?CND1
?CCL3:	MUL	PTR,2 >BUF
	ADD	P-LEXV,BUF
	GETB	STACK,2 >?TMP1
	ADD	P-LEXV,BUF
	GETB	STACK,3
	ICALL	WORD-PRINT,?TMP1,STACK
?CND1:	PRINTI	""" in a way that I don't understand.]"
	CRLF	
	CALL1	STOP
	RSTACK	


	.FUNCT	SYNTAX-CHECK,SYN,LEN,NUM,OBJ,DRIVE1,DRIVE2,PREP,VERB,?TMP2,?TMP1
	GET	P-ITBL,P-VERB >VERB
	ZERO?	VERB \?CND1
	PRINT	NO-VERB
	RFALSE	
?CND1:	SUB	255,VERB
	GET	VERBS,STACK >SYN
	GETB	SYN,0 >LEN
	INC	'SYN
?PRG3:	GETB	SYN,P-SBITS
	BAND	STACK,P-SONUMS >NUM
	GRTR?	P-NCN,NUM /?CND5
	LESS?	NUM,1 /?CCL9
	ZERO?	P-NCN \?CCL9
	GET	P-ITBL,P-PREP1 >PREP
	ZERO?	PREP /?CTR8
	GETB	SYN,P-SPREP1
	EQUAL?	PREP,STACK \?CCL9
?CTR8:	SET	'DRIVE1,SYN
	JUMP	?CND5
?CCL9:	GETB	SYN,P-SPREP1 >?TMP1
	GET	P-ITBL,P-PREP1
	EQUAL?	?TMP1,STACK \?CND5
	EQUAL?	NUM,2 \?CCL18
	EQUAL?	P-NCN,1 \?CCL18
	SET	'DRIVE2,SYN
?CND5:	DLESS?	'LEN,1 \?CCL24
	ZERO?	DRIVE1 \?REP4
	ZERO?	DRIVE2 \?REP4
	ICALL1	RECOGNIZE
	RFALSE	
?CCL18:	GETB	SYN,P-SPREP2 >?TMP1
	GET	P-ITBL,P-PREP2
	EQUAL?	?TMP1,STACK \?CND5
	ICALL2	SYNTAX-FOUND,SYN
	RTRUE	
?CCL24:	ADD	SYN,P-SYNLEN >SYN
	JUMP	?PRG3
?REP4:	ZERO?	DRIVE1 /?CCL32
	GETB	DRIVE1,P-SFWIM1 >?TMP2
	GETB	DRIVE1,P-SLOC1 >?TMP1
	GETB	DRIVE1,P-SPREP1
	CALL	GWIM,?TMP2,?TMP1,STACK >OBJ
	ZERO?	OBJ /?CCL32
	PUT	P-PRSO,P-MATCHLEN,1
	PUT	P-PRSO,1,OBJ
	CALL2	SYNTAX-FOUND,DRIVE1
	RSTACK	
?CCL32:	ZERO?	DRIVE2 /?CCL36
	GETB	DRIVE2,P-SFWIM2 >?TMP2
	GETB	DRIVE2,P-SLOC2 >?TMP1
	GETB	DRIVE2,P-SPREP2
	CALL	GWIM,?TMP2,?TMP1,STACK >OBJ
	ZERO?	OBJ /?CCL36
	PUT	P-PRSI,P-MATCHLEN,1
	PUT	P-PRSI,1,OBJ
	CALL2	SYNTAX-FOUND,DRIVE2
	RSTACK	
?CCL36:	EQUAL?	WINNER,PROTAGONIST \?CCL41
	ICALL	ORPHAN,DRIVE1,DRIVE2
	PRINTI	"[Wh"
	JUMP	?CND39
?CCL41:	PRINTI	"[Your command was not complete. Next time, type wh"
?CND39:	EQUAL?	VERB,ACT?WALK,ACT?GO \?CCL44
	PRINTI	"ere"
	JUMP	?CND42
?CCL44:	ZERO?	DRIVE1 /?PRD48
	GETB	DRIVE1,P-SFWIM1
	EQUAL?	STACK,ACTORBIT /?CTR45
?PRD48:	ZERO?	DRIVE2 /?CCL46
	GETB	DRIVE2,P-SFWIM2
	EQUAL?	STACK,ACTORBIT \?CCL46
?CTR45:	PRINTI	"om"
	JUMP	?CND42
?CCL46:	PRINTI	"at"
?CND42:	EQUAL?	WINNER,PROTAGONIST \?CCL55
	PRINTI	" do you want to "
	JUMP	?CND53
?CCL55:	PRINTI	" you want"
	ICALL2	TPRINT,WINNER
	PRINTI	" to "
?CND53:	ICALL1	VERB-PRINT
	SET	'P-OFLAG,FALSE-VALUE
	ZERO?	DRIVE2 /?CND56
	SET	'PREP,P-MERGED
	SET	'P-MERGED,FALSE-VALUE
	ICALL	CLAUSE-PRINT,P-NC1,P-NC1L
	SET	'P-MERGED,PREP
?CND56:	ZERO?	DRIVE1 /?CCL60
	GETB	DRIVE1,P-SPREP1
	JUMP	?CND58
?CCL60:	GETB	DRIVE2,P-SPREP2
?CND58:	ICALL2	PREP-PRINT,STACK
	EQUAL?	WINNER,PROTAGONIST \?CCL63
	SET	'P-OFLAG,TRUE-VALUE
	PRINTI	"?]"
	CRLF	
	RFALSE	
?CCL63:	SET	'P-OFLAG,FALSE-VALUE
	PRINTI	".]"
	CRLF	
	RFALSE	


	.FUNCT	VERB-PRINT,TMP,?TMP1
	GET	P-ITBL,P-VERBN >TMP
	ZERO?	TMP \?CCL3
	PRINTI	"tell"
	RTRUE	
?CCL3:	EQUAL?	TMP,W?ZZMGCK \?CCL5
	PRINTI	"answer"
	RTRUE	
?CCL5:	GETB	TMP,2
	ZERO?	STACK \?CCL7
	GET	TMP,0
	PRINTB	STACK
	RTRUE	
?CCL7:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	ICALL	WORD-PRINT,?TMP1,STACK
	PUTB	TMP,2,0
	RTRUE	


	.FUNCT	CANT-ORPHAN
	PRINTI	"""I don't understand! What are you referring to?"""
	CRLF	
	RFALSE	


	.FUNCT	ORPHAN,D1,D2,CNT
	SET	'CNT,-1
	ZERO?	P-MERGED \?CND1
	PUT	P-OCL1,P-MATCHLEN,0
	PUT	P-OCL2,P-MATCHLEN,0
?CND1:	GET	P-VTBL,0
	PUT	P-OVTBL,0,STACK
	GETB	P-VTBL,2
	PUTB	P-OVTBL,2,STACK
	GETB	P-VTBL,3
	PUTB	P-OVTBL,3,STACK
?PRG3:	IGRTR?	'CNT,P-ITBLLEN /?REP4
	GET	P-ITBL,CNT
	PUT	P-OTBL,CNT,STACK
	JUMP	?PRG3
?REP4:	EQUAL?	P-NCN,2 \?CND8
	PUT	P-CCTBL,CC-SBPTR,P-NC2
	PUT	P-CCTBL,CC-SEPTR,P-NC2L
	PUT	P-CCTBL,CC-OCLAUSE,P-OCL2
	ICALL	CLAUSE-COPY,P-ITBL,P-OTBL
?CND8:	LESS?	P-NCN,1 /?CND10
	PUT	P-CCTBL,CC-SBPTR,P-NC1
	PUT	P-CCTBL,CC-SEPTR,P-NC1L
	PUT	P-CCTBL,CC-OCLAUSE,P-OCL1
	ICALL	CLAUSE-COPY,P-ITBL,P-OTBL
?CND10:	ZERO?	D1 /?CCL14
	GETB	D1,P-SPREP1
	PUT	P-OTBL,P-PREP1,STACK
	PUT	P-OTBL,P-NC1,1
	RTRUE	
?CCL14:	ZERO?	D2 /FALSE
	GETB	D2,P-SPREP2
	PUT	P-OTBL,P-PREP2,STACK
	PUT	P-OTBL,P-NC2,1
	RTRUE	


	.FUNCT	CLAUSE-PRINT,BPTR,EPTR,THE?,?TMP1
	ASSIGNED?	'THE? /?CND1
	SET	'THE?,TRUE-VALUE
?CND1:	GET	P-ITBL,BPTR >?TMP1
	GET	P-ITBL,EPTR
	CALL	BUFFER-PRINT,?TMP1,STACK,THE?
	RSTACK	


	.FUNCT	BUFFER-PRINT,BEG,END,CP,NOSP,WRD,FIRST??,PN,?TMP1
	SET	'FIRST??,TRUE-VALUE
?PRG1:	EQUAL?	BEG,END /TRUE
	ZERO?	NOSP /?CCL8
	SET	'NOSP,FALSE-VALUE
	JUMP	?CND6
?CCL8:	PRINTC	32
?CND6:	GET	BEG,0 >WRD
	EQUAL?	WRD,W?PERIOD \?CCL11
	SET	'NOSP,TRUE-VALUE
	JUMP	?CND3
?CCL11:	EQUAL?	WRD,W?ME,W?MYSELF \?CCL13
	PRINTD	ME
	SET	'PN,TRUE-VALUE
	JUMP	?CND3
?CCL13:	CALL2	NAME?,WRD
	ZERO?	STACK /?CCL15
	ICALL2	CAPITALIZE,BEG
	SET	'PN,TRUE-VALUE
	JUMP	?CND3
?CCL15:	ZERO?	FIRST?? /?CND16
	ZERO?	PN \?CND16
	ZERO?	CP /?CND16
	EQUAL?	WRD,W?MY,W?HIS,W?HER /?CND16
	PRINTI	"the "
?CND16:	ZERO?	P-OFLAG \?CTR23
	ZERO?	P-MERGED /?CCL24
?CTR23:	PRINTB	WRD
	JUMP	?CND22
?CCL24:	EQUAL?	WRD,W?IT,W?THEM \?CCL28
	CALL2	ACCESSIBLE?,P-IT-OBJECT
	ZERO?	STACK /?CCL28
	ICALL2	DPRINT,P-IT-OBJECT
	JUMP	?CND22
?CCL28:	EQUAL?	WRD,W?HIM,W?HIMSELF \?CCL32
	CALL2	ACCESSIBLE?,P-HIM-OBJECT
	ZERO?	STACK /?CCL32
	ICALL2	DPRINT,P-HIM-OBJECT
	JUMP	?CND22
?CCL32:	EQUAL?	WRD,W?HER,W?HERSELF \?CCL36
	CALL2	ACCESSIBLE?,P-HER-OBJECT
	ZERO?	STACK /?CCL36
	ICALL2	DPRINT,P-HER-OBJECT
	JUMP	?CND22
?CCL36:	GETB	BEG,2 >?TMP1
	GETB	BEG,3
	ICALL	WORD-PRINT,?TMP1,STACK
?CND22:	SET	'FIRST??,FALSE-VALUE
?CND3:	ADD	BEG,P-WORDLEN >BEG
	JUMP	?PRG1


	.FUNCT	NAME?,WRD
	EQUAL?	WRD,W?TRENT,W?TIFFANY,W?TIFF /TRUE
	EQUAL?	WRD,W?THETA,W?ELYSIA,W?ELYSIUM /TRUE
	EQUAL?	WRD,W?MITRE,W?THORBAST,W?THORBALA /TRUE
	EQUAL?	WRD,W?FORD,W?VENUS,W?CLEVELAND /TRUE
	RFALSE	


	.FUNCT	CAPITALIZE,PTR,?TMP1
	ZERO?	P-OFLAG \?CTR2
	ZERO?	P-MERGED /?CCL3
?CTR2:	GET	PTR,0
	PRINTB	STACK
	RTRUE	
?CCL3:	GETB	PTR,3
	GETB	P-INBUF,STACK
	SUB	STACK,32
	PRINTC	STACK
	GETB	PTR,2
	SUB	STACK,1 >?TMP1
	GETB	PTR,3
	ADD	STACK,1
	CALL	WORD-PRINT,?TMP1,STACK
	RSTACK	


	.FUNCT	PREP-PRINT,PREP,WRD
	ZERO?	PREP /FALSE
	PRINTC	32
	EQUAL?	PREP,PR?THROUGH \?CCL6
	PRINTI	"through"
	RTRUE	
?CCL6:	CALL2	PREP-FIND,PREP >WRD
	PRINTB	WRD
	RTRUE	


	.FUNCT	CLAUSE-COPY,SRC,DEST,INSRT,OCL,BEG,END,BB,EE,OBEG,CNT,B,E
	GET	P-CCTBL,CC-SBPTR >BB
	GET	P-CCTBL,CC-SEPTR >EE
	GET	P-CCTBL,CC-OCLAUSE >OCL
	GET	SRC,BB >BEG
	GET	SRC,EE >END
	GET	OCL,P-MATCHLEN >OBEG
?PRG1:	EQUAL?	BEG,END /?REP2
	ZERO?	INSRT /?CCL7
	GET	BEG,0
	EQUAL?	P-ANAM,STACK \?CCL7
	EQUAL?	INSRT,TRUE-VALUE \?CCL12
	GET	P-ITBL,P-NC1 >B
	GET	P-ITBL,P-NC1L >E
?PRG13:	EQUAL?	B,E /?CND5
	GET	B,0
	ICALL2	CLAUSE-ADD,STACK
	ADD	B,P-WORDLEN >B
	JUMP	?PRG13
?CCL12:	GET	OCL,1
	EQUAL?	INSRT,STACK /?CND5
	ICALL2	CLAUSE-ADD,INSRT
	GET	BEG,0
	ICALL2	CLAUSE-ADD,STACK
	JUMP	?CND5
?CCL7:	GET	BEG,0
	ICALL2	CLAUSE-ADD,STACK
?CND5:	ADD	BEG,P-WORDLEN >BEG
	JUMP	?PRG1
?REP2:	EQUAL?	SRC,DEST \?CND18
	GRTR?	OBEG,0 \?CND18
	GET	OCL,P-MATCHLEN
	SUB	STACK,OBEG >CNT
	PUT	OCL,P-MATCHLEN,0
	INC	'OBEG
?PRG22:	GET	OCL,OBEG
	ICALL2	CLAUSE-ADD,STACK
	SUB	CNT,2 >CNT
	ZERO?	CNT /?REP23
	ADD	OBEG,2 >OBEG
	JUMP	?PRG22
?REP23:	SET	'OBEG,0
?CND18:	MUL	OBEG,P-LEXELEN
	ADD	STACK,2
	ADD	OCL,STACK
	PUT	DEST,BB,STACK
	GET	OCL,P-MATCHLEN
	MUL	STACK,P-LEXELEN
	ADD	STACK,2
	ADD	OCL,STACK
	PUT	DEST,EE,STACK
	RTRUE	


	.FUNCT	CLAUSE-ADD,WRD,OCL,PTR
	GET	P-CCTBL,CC-OCLAUSE >OCL
	GET	OCL,P-MATCHLEN
	ADD	STACK,2 >PTR
	SUB	PTR,1
	PUT	OCL,STACK,WRD
	PUT	OCL,PTR,0
	PUT	OCL,P-MATCHLEN,PTR
	RTRUE	


	.FUNCT	PREP-FIND,PREP,CNT,SIZE
	GET	PREPOSITIONS,0
	MUL	STACK,2 >SIZE
?PRG1:	IGRTR?	'CNT,SIZE /FALSE
	GET	PREPOSITIONS,CNT
	EQUAL?	STACK,PREP \?PRG1
	SUB	CNT,1
	GET	PREPOSITIONS,STACK
	RSTACK	


	.FUNCT	SYNTAX-FOUND,SYN
	SET	'P-SYNTAX,SYN
	GETB	SYN,P-SACTION >PRSA
	RETURN	PRSA


	.FUNCT	GWIM,GBIT,LBIT,PREP,OBJ
	EQUAL?	GBIT,RLANDBIT \?CND1
	RETURN	ROOMS
?CND1:	SET	'P-GWIMBIT,GBIT
	SET	'P-SLOCBITS,LBIT
	PUT	P-MERGE,P-MATCHLEN,0
	CALL	GET-OBJECT,P-MERGE,FALSE-VALUE
	ZERO?	STACK /?CCL5
	SET	'P-GWIMBIT,0
	GET	P-MERGE,P-MATCHLEN
	EQUAL?	STACK,1 \FALSE
	GET	P-MERGE,1 >OBJ
	PRINTC	91
	ZERO?	PREP /?CND9
	ZERO?	P-END-ON-PREP \?CND9
	CALL2	PREP-FIND,PREP >PREP
	PRINTB	PREP
	EQUAL?	PREP,W?OUT \?CND13
	PRINTI	" of"
?CND13:	FSET?	OBJ,NARTICLEBIT /?CCL17
	PRINTI	" the "
	JUMP	?CND9
?CCL17:	PRINTC	32
?CND9:	ICALL2	DPRINT,OBJ
	PRINTC	93
	CRLF	
	RETURN	OBJ
?CCL5:	SET	'P-GWIMBIT,0
	RFALSE	


	.FUNCT	SNARF-OBJECTS,PTR
	GET	P-ITBL,P-NC1 >PTR
	ZERO?	PTR /?CND1
	SET	'P-PHR,0
	GETB	P-SYNTAX,P-SLOC1 >P-SLOCBITS
	GET	P-ITBL,P-NC1L
	CALL	SNARFEM,PTR,STACK,P-PRSO
	ZERO?	STACK /FALSE
	GET	P-BUTS,P-MATCHLEN
	ZERO?	STACK /?CND1
	CALL2	BUT-MERGE,P-PRSO >P-PRSO
?CND1:	GET	P-ITBL,P-NC2 >PTR
	ZERO?	PTR /TRUE
	SET	'P-PHR,1
	GETB	P-SYNTAX,P-SLOC2 >P-SLOCBITS
	GET	P-ITBL,P-NC2L
	CALL	SNARFEM,PTR,STACK,P-PRSI
	ZERO?	STACK /FALSE
	GET	P-BUTS,P-MATCHLEN
	ZERO?	STACK /TRUE
	GET	P-PRSI,P-MATCHLEN
	EQUAL?	STACK,1 \?CCL15
	CALL2	BUT-MERGE,P-PRSO >P-PRSO
	RTRUE	
?CCL15:	CALL2	BUT-MERGE,P-PRSI >P-PRSI
	RTRUE	


	.FUNCT	BUT-MERGE,TBL,LEN,BUTLEN,CNT,MATCHES,OBJ,NTBL,?TMP1,?TMP2
	SET	'CNT,1
	GET	TBL,P-MATCHLEN >LEN
	PUT	P-MERGE,P-MATCHLEN,0
?PRG1:	DLESS?	'LEN,0 /?REP2
	GET	TBL,CNT >OBJ
	ADD	P-BUTS,2 >?TMP1
	GET	P-BUTS,0
	INTBL?	OBJ,?TMP1,STACK /?CND3
	ADD	MATCHES,1
	PUT	P-MERGE,STACK,OBJ
	INC	'MATCHES
?CND3:	INC	'CNT
	JUMP	?PRG1
?REP2:	PUT	P-MERGE,P-MATCHLEN,MATCHES
	SET	'NTBL,P-MERGE
	SET	'P-MERGE,TBL
	RETURN	NTBL


	.FUNCT	SNARFEM,PTR,EPTR,TBL,BUT,LEN,WV,WRD,NW,WAS-ALL
	SET	'P-AND,FALSE-VALUE
	EQUAL?	P-GETFLAGS,P-ALL \?CND1
	SET	'WAS-ALL,TRUE-VALUE
?CND1:	SET	'P-GETFLAGS,0
	PUT	P-BUTS,P-MATCHLEN,0
	PUT	TBL,P-MATCHLEN,0
	GET	PTR,0 >WRD
?PRG3:	EQUAL?	PTR,EPTR \?CCL7
	ZERO?	BUT /?PRD10
	PUSH	BUT
	JUMP	?PEN8
?PRD10:	PUSH	TBL
?PEN8:	CALL2	GET-OBJECT,STACK >WV
	ZERO?	WAS-ALL \?CCL12
	RETURN	WV
?CCL12:	SET	'P-GETFLAGS,P-ALL
	RETURN	WV
?CCL7:	ADD	PTR,P-WORDLEN
	EQUAL?	EPTR,STACK \?CCL15
	SET	'NW,0
	JUMP	?CND13
?CCL15:	GET	PTR,P-LEXELEN >NW
?CND13:	EQUAL?	WRD,W?ALL,W?BOTH,W?EVERYTHING \?CCL18
	CALL2	MANY-CHECK,P-PHR
	ZERO?	STACK /FALSE
	SET	'P-GETFLAGS,P-ALL
	EQUAL?	NW,W?OF \?CND5
	ADD	PTR,P-WORDLEN >PTR
	JUMP	?CND5
?CCL18:	CALL2	NAUGHTY-WORD?,WRD
	ZERO?	STACK \FALSE
	EQUAL?	WRD,W?BUT,W?EXCEPT \?CCL26
	ZERO?	BUT /?PRD31
	PUSH	BUT
	JUMP	?PEN29
?PRD31:	PUSH	TBL
?PEN29:	CALL2	GET-OBJECT,STACK
	ZERO?	STACK /FALSE
	SET	'BUT,P-BUTS
	PUT	BUT,P-MATCHLEN,0
	JUMP	?CND5
?CCL26:	EQUAL?	WRD,W?A,W?ONE \?CCL33
	ZERO?	P-ADJ \?CCL36
	SET	'P-GETFLAGS,P-ONE
	EQUAL?	NW,W?OF \?CND5
	ADD	PTR,P-WORDLEN >PTR
	JUMP	?CND5
?CCL36:	SET	'P-NAM,P-ONEOBJ
	ZERO?	BUT /?PRD43
	PUSH	BUT
	JUMP	?PEN41
?PRD43:	PUSH	TBL
?PEN41:	CALL2	GET-OBJECT,STACK
	ZERO?	STACK /FALSE
	ZERO?	NW \?CND5
	RTRUE	
?CCL33:	EQUAL?	WRD,W?AND,W?COMMA \?CCL47
	EQUAL?	NW,W?AND,W?COMMA /?CCL47
	SET	'P-AND,TRUE-VALUE
	ZERO?	BUT /?PRD54
	PUSH	BUT
	JUMP	?PEN52
?PRD54:	PUSH	TBL
?PEN52:	CALL2	GET-OBJECT,STACK
	ZERO?	STACK \?CND5
	RFALSE	
?CCL47:	CALL	WT?,WRD,4
	ZERO?	STACK \?CND5
	EQUAL?	WRD,W?AND,W?COMMA /?CND5
	EQUAL?	WRD,W?OF \?CCL58
	ZERO?	P-GETFLAGS \?CND5
	SET	'P-GETFLAGS,P-INHIBIT
	JUMP	?CND5
?CCL58:	CALL	WT?,WRD,32
	ZERO?	STACK /?CCL62
	CALL	ADJ-CHECK,WRD,P-ADJ
	ZERO?	STACK /?CCL62
	EQUAL?	NW,W?OF /?CCL62
	SET	'P-ADJ,WRD
	JUMP	?CND5
?CCL62:	CALL	WT?,WRD,128
	ZERO?	STACK /?CND5
	SET	'P-NAM,WRD
	SET	'P-ONEOBJ,WRD
?CND5:	EQUAL?	PTR,EPTR /?PRG3
	ADD	PTR,P-WORDLEN >PTR
	SET	'WRD,NW
	JUMP	?PRG3


	.FUNCT	NAUGHTY-WORD?,WORD
	ZERO?	NAUGHTY-LEVEL \FALSE
	EQUAL?	WORD,W?ASS,W?ASSHOLE \?CCL5
	CALL2	KNOW-WORD,STR?9
	RSTACK	
?CCL5:	EQUAL?	WORD,W?BASTARD,W?BITCH \?CCL7
	CALL2	KNOW-WORD,STR?10
	RSTACK	
?CCL7:	EQUAL?	WORD,W?COCK,W?COCKSU,W?CUNT \?CCL9
	CALL2	KNOW-WORD,STR?11
	RSTACK	
?CCL9:	EQUAL?	WORD,W?DAMN,W?DAMNED \?CCL11
	CALL2	KNOW-WORD,STR?12
	RSTACK	
?CCL11:	EQUAL?	WORD,W?FUCK,W?FUCKED,W?FUCKING \?CCL13
	CALL2	KNOW-WORD,STR?13
	RSTACK	
?CCL13:	EQUAL?	WORD,W?SHIT,W?SHITHEAD \FALSE
	CALL2	KNOW-WORD,STR?14
	RSTACK	


	.FUNCT	KNOW-WORD,LETTER
	PRINTI	"[I don't know the "
	PRINT	LETTER
	PRINTR	"-word.]"


	.FUNCT	ADJ-CHECK,WRD,ADJ
	ZERO?	ADJ /TRUE
	EQUAL?	WRD,W?RETURN \?CCL5
	EQUAL?	ADJ,W?COIN /TRUE
?CCL5:	EQUAL?	WRD,W?NARROW,W?WIDE /TRUE
	EQUAL?	WRD,W?PURPLE,W?ORANGE /TRUE
	RFALSE	


	.FUNCT	GET-OBJECT,TBL,VRB,BITS,LEN,XBITS,TLEN,GCHECK,OLEN,OBJ
	ASSIGNED?	'VRB /?CND1
	SET	'VRB,TRUE-VALUE
?CND1:	SET	'XBITS,P-SLOCBITS
	GET	TBL,P-MATCHLEN >TLEN
	BTST	P-GETFLAGS,P-INHIBIT /TRUE
	ZERO?	P-NAM \?CND5
	ZERO?	P-ADJ /?CND5
	CALL	WT?,P-ADJ,128
	ZERO?	STACK /?CCL11
	SET	'P-NAM,P-ADJ
	SET	'P-ADJ,FALSE-VALUE
	JUMP	?CND5
?CCL11:	CALL	WT?,P-ADJ,16,3 >BITS
	ZERO?	BITS /?CND5
	SET	'P-DIRECTION,BITS
?CND5:	ZERO?	P-NAM \?CND13
	ZERO?	P-ADJ \?CND13
	EQUAL?	P-GETFLAGS,P-ALL /?CND13
	ZERO?	P-GWIMBIT \?CND13
	ZERO?	VRB /FALSE
	PRINT	NOUN-MISSING
	RFALSE	
?CND13:	EQUAL?	P-GETFLAGS,P-ALL \?CCL22
	ZERO?	P-SLOCBITS \?CND21
?CCL22:	SET	'P-SLOCBITS,-1
?CND21:	SET	'P-TABLE,TBL
?PRG25:	ZERO?	GCHECK /?CCL29
	ICALL2	GLOBAL-CHECK,TBL
	JUMP	?CND27
?CCL29:	ZERO?	LIT \?CTR31
	EQUAL?	PRSA,V?TELL \?CCL32
?CTR31:	FCLEAR	PROTAGONIST,TRANSBIT
	ICALL	DO-SL,HERE,SOG,SIR
	FSET	PROTAGONIST,TRANSBIT
	JUMP	?CND30
?CCL32:	LOC	PROTAGONIST
	FSET?	STACK,VEHBIT \?CND30
	LOC	PROTAGONIST
	CALL2	THIS-IT?,STACK
	ZERO?	STACK /?CND30
	LOC	PROTAGONIST
	ICALL	OBJ-FOUND,STACK,TBL
?CND30:	ICALL	DO-SL,PROTAGONIST,SH,SC
?CND27:	GET	TBL,P-MATCHLEN
	SUB	STACK,TLEN >LEN
	BTST	P-GETFLAGS,P-ALL /?CND38
	EQUAL?	P-GETFLAGS,P-ALL /?CCL41
	GRTR?	LEN,1 /?CTR40
	ZERO?	LEN \?CCL41
	EQUAL?	P-SLOCBITS,-1 /?CCL41
?CTR40:	EQUAL?	P-SLOCBITS,-1 \?CCL50
	SET	'P-SLOCBITS,XBITS
	SET	'OLEN,LEN
	GET	TBL,P-MATCHLEN
	SUB	STACK,LEN
	PUT	TBL,P-MATCHLEN,STACK
	JUMP	?PRG25
?CCL50:	ICALL1	PUT-ADJ-NAM
	ZERO?	LEN \?CND51
	SET	'LEN,OLEN
?CND51:	ZERO?	P-NAM /?CCL55
	ADD	TLEN,1
	GET	TBL,STACK >OBJ
	ZERO?	OBJ /?CCL55
	GETP	OBJ,P?GENERIC
	CALL	STACK >OBJ
	ZERO?	OBJ /?CCL55
	EQUAL?	OBJ,NOT-HERE-OBJECT /FALSE
	PUT	TBL,1,OBJ
	PUT	TBL,P-MATCHLEN,1
	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RTRUE	
?CCL55:	ZERO?	VRB /?CCL62
	EQUAL?	WINNER,PROTAGONIST /?CCL62
	ICALL1	CANT-ORPHAN
	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RFALSE	
?CCL62:	ZERO?	VRB /?CCL66
	ZERO?	P-NAM /?CCL66
	ICALL	WHICH-PRINT,TLEN,LEN,TBL
	EQUAL?	TBL,P-PRSO \?CCL71
	SET	'P-ACLAUSE,P-NC1
	JUMP	?CND69
?CCL71:	SET	'P-ACLAUSE,P-NC2
?CND69:	SET	'P-AADJ,P-ADJ
	SET	'P-ANAM,P-NAM
	ICALL	ORPHAN,FALSE-VALUE,FALSE-VALUE
	SET	'P-OFLAG,TRUE-VALUE
	JUMP	?CND53
?CCL66:	ZERO?	VRB /?CND53
	PRINT	NOUN-MISSING
?CND53:	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RFALSE	
?CCL41:	ZERO?	LEN \?CCL74
	ZERO?	GCHECK /?CCL74
	ICALL1	PUT-ADJ-NAM
	ZERO?	VRB /?CND77
	SET	'P-SLOCBITS,XBITS
	ZERO?	LIT \?CTR80
	EQUAL?	PRSA,V?TELL /?CTR80
	EQUAL?	PRSA,V?WHERE,V?WHAT \?CCL81
?CTR80:	ICALL	OBJ-FOUND,NOT-HERE-OBJECT,TBL
	SET	'P-XNAM,P-NAM
	SET	'P-XADJ,P-ADJ
	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RTRUE	
?CCL81:	PRINT	TOO-DARK
	CRLF	
?CND77:	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RFALSE	
?CCL74:	ZERO?	LEN \?CND38
	SET	'GCHECK,TRUE-VALUE
	JUMP	?PRG25
?CND38:	SET	'P-SLOCBITS,XBITS
	ICALL1	PUT-ADJ-NAM
	SET	'P-NAM,FALSE-VALUE
	SET	'P-ADJ,FALSE-VALUE
	RTRUE	


	.FUNCT	PUT-ADJ-NAM
	EQUAL?	P-NAM,W?IT /FALSE
	PUT	P-NAMW,P-PHR,P-NAM
	PUT	P-ADJW,P-PHR,P-ADJ
	RTRUE	


	.FUNCT	MOBY-FIND,TBL,OBJ,LEN,FOO,NAM,ADJ
	SET	'OBJ,1
	SET	'NAM,P-NAM
	SET	'ADJ,P-ADJ
	SET	'P-NAM,P-XNAM
	SET	'P-ADJ,P-XADJ
	PUT	TBL,P-MATCHLEN,0
?PRG3:	IN?	OBJ,ROOMS /?CND5
	CALL2	THIS-IT?,OBJ >FOO
	ZERO?	FOO /?CND5
	CALL	OBJ-FOUND,OBJ,TBL >FOO
?CND5:	IGRTR?	'OBJ,LAST-OBJECT \?PRG3
	GET	TBL,P-MATCHLEN >LEN
	EQUAL?	LEN,1 \?CND11
	GET	TBL,1 >P-MOBY-FOUND
?CND11:	SET	'P-NAM,NAM
	SET	'P-ADJ,ADJ
	RETURN	LEN


	.FUNCT	WHICH-PRINT,TLEN,LEN,TBL,OBJ,RLEN
	SET	'RLEN,LEN
	PRINTI	"[Which"
	ZERO?	P-OFLAG \?CTR2
	ZERO?	P-MERGED \?CTR2
	ZERO?	P-AND /?CCL3
?CTR2:	PRINTC	32
	PRINTB	P-NAM
	JUMP	?CND1
?CCL3:	EQUAL?	TBL,P-PRSO \?CCL8
	ICALL	CLAUSE-PRINT,P-NC1,P-NC1L,FALSE-VALUE
	JUMP	?CND1
?CCL8:	ICALL	CLAUSE-PRINT,P-NC2,P-NC2L,FALSE-VALUE
?CND1:	PRINTI	" do you mean, "
?PRG9:	INC	'TLEN
	GET	TBL,TLEN >OBJ
	FSET?	OBJ,NARTICLEBIT /?CND11
	PRINTI	"the "
?CND11:	ICALL2	DPRINT,OBJ
	EQUAL?	LEN,2 \?CCL15
	EQUAL?	RLEN,2 /?CND16
	PRINTC	44
?CND16:	PRINTI	" or "
	JUMP	?CND13
?CCL15:	GRTR?	LEN,2 \?CND13
	PRINTI	", "
?CND13:	DLESS?	'LEN,1 \?PRG9
	PRINTR	"?]"


	.FUNCT	GLOBAL-CHECK,TBL,LEN,RMG,RMGL,CNT,OBJ,OBITS,FOO
	GET	TBL,P-MATCHLEN >LEN
	SET	'OBITS,P-SLOCBITS
	GETPT	HERE,P?GLOBAL >RMG
	ZERO?	RMG /?CND1
	PTSIZE	RMG
	DIV	STACK,2
	SUB	STACK,1 >RMGL
?PRG3:	GET	RMG,CNT >OBJ
	CALL2	THIS-IT?,OBJ
	ZERO?	STACK /?CND5
	ICALL	OBJ-FOUND,OBJ,TBL
?CND5:	IGRTR?	'CNT,RMGL \?PRG3
?CND1:	GET	TBL,P-MATCHLEN
	EQUAL?	STACK,LEN \FALSE
	SET	'P-SLOCBITS,-1
	SET	'P-TABLE,TBL
	ICALL	DO-SL,GLOBAL-OBJECTS,1,1
	SET	'P-SLOCBITS,OBITS
	RETURN	P-SLOCBITS


	.FUNCT	DO-SL,OBJ,BIT1,BIT2,BTS
	ADD	BIT1,BIT2
	BTST	P-SLOCBITS,STACK \?CCL3
	CALL	SEARCH-LIST,OBJ,P-TABLE,P-SRCALL
	RSTACK	
?CCL3:	BTST	P-SLOCBITS,BIT1 \?CCL6
	CALL	SEARCH-LIST,OBJ,P-TABLE,P-SRCTOP
	RSTACK	
?CCL6:	BTST	P-SLOCBITS,BIT2 \TRUE
	CALL	SEARCH-LIST,OBJ,P-TABLE,P-SRCBOT
	RSTACK	


	.FUNCT	SEARCH-LIST,OBJ,TBL,LVL,FLS,NOBJ
	FIRST?	OBJ >OBJ \FALSE
?PRG4:	EQUAL?	LVL,P-SRCBOT /?CND6
	GETPT	OBJ,P?SYNONYM
	ZERO?	STACK /?CND6
	CALL2	THIS-IT?,OBJ
	ZERO?	STACK /?CND6
	ICALL	OBJ-FOUND,OBJ,TBL
?CND6:	ZERO?	LVL \?PRD14
	FSET?	OBJ,SEARCHBIT /?PRD14
	FSET?	OBJ,SURFACEBIT \?CND11
?PRD14:	FIRST?	OBJ >NOBJ \?CND11
	FSET?	OBJ,OPENBIT /?CCL19
	FSET?	OBJ,TRANSBIT /?CCL19
	ZERO?	P-MOBY-FLAG /?CND11
?CCL19:	FSET?	OBJ,SURFACEBIT \?CCL25
	PUSH	P-SRCALL
	JUMP	?CND23
?CCL25:	FSET?	OBJ,SEARCHBIT \?CCL27
	PUSH	P-SRCALL
	JUMP	?CND23
?CCL27:	PUSH	P-SRCTOP
?CND23:	CALL	SEARCH-LIST,OBJ,TBL,STACK >FLS
?CND11:	NEXT?	OBJ >OBJ /?PRG4
	RTRUE	


	.FUNCT	OBJ-FOUND,OBJ,TBL,PTR
	GET	TBL,P-MATCHLEN >PTR
	ADD	PTR,1
	PUT	TBL,STACK,OBJ
	ADD	PTR,1
	PUT	TBL,P-MATCHLEN,STACK
	RTRUE	


	.FUNCT	TAKE-CHECK
	GETB	P-SYNTAX,P-SLOC1
	CALL	ITAKE-CHECK,P-PRSO,STACK
	ZERO?	STACK /FALSE
	GETB	P-SYNTAX,P-SLOC2
	CALL	ITAKE-CHECK,P-PRSI,STACK
	RSTACK	


	.FUNCT	ITAKE-CHECK,TBL,IBITS,PTR,OBJ,TAKEN
	GET	TBL,P-MATCHLEN >PTR
	ZERO?	PTR /TRUE
	BTST	IBITS,SHAVE /?PRG8
	BTST	IBITS,STAKE \TRUE
?PRG8:	DLESS?	'PTR,0 /TRUE
	ADD	PTR,1
	GET	TBL,STACK >OBJ
	EQUAL?	OBJ,IT \?CCL15
	CALL2	VISIBLE?,P-IT-OBJECT
	ZERO?	STACK \?CCL18
	ICALL1	REFERRING
	RFALSE	
?CCL18:	SET	'OBJ,P-IT-OBJECT
	JUMP	?CND13
?CCL15:	EQUAL?	OBJ,HIM \?CCL20
	CALL2	VISIBLE?,P-HIM-OBJECT
	ZERO?	STACK \?CCL23
	ICALL2	REFERRING,TRUE-VALUE
	RFALSE	
?CCL23:	SET	'OBJ,P-HIM-OBJECT
	JUMP	?CND13
?CCL20:	EQUAL?	OBJ,HER \?CND13
	CALL2	VISIBLE?,P-HER-OBJECT
	ZERO?	STACK \?CCL27
	ICALL2	REFERRING,TRUE-VALUE
	RFALSE	
?CCL27:	SET	'OBJ,P-HER-OBJECT
?CND13:	CALL2	ULTIMATELY-IN?,OBJ
	ZERO?	STACK \?PRG8
	EQUAL?	OBJ,RAFT \?PRD33
	ZERO?	RAFT-HELD \?PRG8
?PRD33:	EQUAL?	OBJ,INTNUM,HANDS,HAND-COVER /?PRG8
	SET	'PRSO,OBJ
	FSET?	OBJ,TRYTAKEBIT \?CCL38
	SET	'TAKEN,TRUE-VALUE
	JUMP	?CND36
?CCL38:	CALL2	UNTOUCHABLE?,OBJ
	ZERO?	STACK /?CCL40
	SET	'TAKEN,TRUE-VALUE
	JUMP	?CND36
?CCL40:	EQUAL?	WINNER,PROTAGONIST /?CCL42
	SET	'TAKEN,FALSE-VALUE
	JUMP	?CND36
?CCL42:	BTST	IBITS,STAKE \?CCL44
	CALL2	ITAKE,FALSE-VALUE
	EQUAL?	STACK,TRUE-VALUE \?CCL44
	SET	'TAKEN,FALSE-VALUE
	JUMP	?CND36
?CCL44:	SET	'TAKEN,TRUE-VALUE
?CND36:	ZERO?	TAKEN /?CCL49
	BTST	IBITS,SHAVE \?CCL49
	GET	TBL,P-MATCHLEN
	LESS?	1,STACK \?CCL54
	PRINT	YNH
	PRINTI	" all those things!"
	CRLF	
	RFALSE	
?CCL54:	EQUAL?	OBJ,NOT-HERE-OBJECT \?CND52
	PRINT	YOU-CANT
	PRINTI	"see that here!"
	CRLF	
	RFALSE	
?CND52:	EQUAL?	WINNER,PROTAGONIST \?CCL58
	PRINT	YNH
	JUMP	?CND56
?CCL58:	PRINTI	"It doesn't look like"
	ICALL2	TPRINT,WINNER
	PRINTI	" has"
?CND56:	ICALL2	THIS-IS-IT,OBJ
	ICALL2	TRPRINT,OBJ
	RFALSE	
?CCL49:	ZERO?	TAKEN \?PRG8
	IN?	PROTAGONIST,OBJ /?PRG8
	EQUAL?	WINNER,PROTAGONIST \?PRG8
	PRINTI	"[taking"
	ICALL2	TPRINT,OBJ
	PRINTI	" first]"
	CRLF	
	JUMP	?PRG8


	.FUNCT	MANY-CHECK,PHR,LOSS,TMP,?TMP1
	ASSIGNED?	'PHR /?CND1
	SET	'PHR,2
?CND1:	ZERO?	PHR \?CCL5
	GETB	P-SYNTAX,P-SLOC1
	BTST	STACK,SMANY /?CCL5
	SET	'LOSS,1
	JUMP	?CND3
?CCL5:	EQUAL?	PHR,1 \?CCL9
	GETB	P-SYNTAX,P-SLOC2
	BTST	STACK,SMANY /?CCL9
	SET	'LOSS,2
	JUMP	?CND3
?CCL9:	EQUAL?	PHR,2 \?CCL13
	GET	P-PRSO,P-MATCHLEN
	GRTR?	STACK,1 \?CCL13
	GETB	P-SYNTAX,P-SLOC1
	BTST	STACK,SMANY /?CCL13
	SET	'LOSS,1
	JUMP	?CND3
?CCL13:	EQUAL?	PHR,2 \?CND3
	GET	P-PRSI,P-MATCHLEN
	GRTR?	STACK,1 \?CND3
	GETB	P-SYNTAX,P-SLOC2
	BTST	STACK,SMANY /?CND3
	SET	'LOSS,2
?CND3:	ZERO?	LOSS /TRUE
	PRINTC	91
	PRINT	YOU-CANT
	PRINTI	"use multiple "
	EQUAL?	LOSS,2 \?CND24
	PRINTI	"in"
?CND24:	PRINTI	"direct objects with """
	GET	P-ITBL,P-VERBN >TMP
	ZERO?	TMP \?CCL28
	PRINTI	"tell"
	JUMP	?CND26
?CCL28:	ZERO?	P-OFLAG \?CTR29
	ZERO?	P-MERGED /?CCL30
?CTR29:	GET	TMP,0
	PRINTB	STACK
	JUMP	?CND26
?CCL30:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	ICALL	WORD-PRINT,?TMP1,STACK
?CND26:	PRINTI	""".]"
	CRLF	
	RFALSE	


	.FUNCT	LIT?,RM,RMBIT,OHERE,LIT
	ASSIGNED?	'RMBIT /?CND1
	SET	'RMBIT,TRUE-VALUE
?CND1:	SET	'P-GWIMBIT,ONBIT
	SET	'OHERE,HERE
	SET	'HERE,RM
	ZERO?	RMBIT /?CCL5
	FSET?	RM,ONBIT \?CCL5
	SET	'LIT,TRUE-VALUE
	JUMP	?CND3
?CCL5:	PUT	P-MERGE,P-MATCHLEN,0
	SET	'P-TABLE,P-MERGE
	SET	'P-SLOCBITS,-1
	EQUAL?	OHERE,RM \?CND8
	ICALL	DO-SL,WINNER,1,1
	EQUAL?	WINNER,PROTAGONIST /?CND8
	IN?	PROTAGONIST,RM \?CND8
	ICALL	DO-SL,PROTAGONIST,1,1
?CND8:	ICALL	DO-SL,RM,1,1
	GET	P-TABLE,P-MATCHLEN
	GRTR?	STACK,0 \?CND3
	SET	'LIT,TRUE-VALUE
?CND3:	SET	'HERE,OHERE
	SET	'P-GWIMBIT,0
	RETURN	LIT


	.FUNCT	PRSO-PRINT,PTR
	ZERO?	P-MERGED \?CTR2
	GET	P-ITBL,P-NC1 >PTR
	GET	PTR,0
	EQUAL?	STACK,W?IT \?CCL3
?CTR2:	PRINTC	32
	CALL2	DPRINT,PRSO
	RSTACK	
?CCL3:	GET	P-ITBL,P-NC1L
	CALL	BUFFER-PRINT,PTR,STACK,FALSE-VALUE
	RSTACK	


	.FUNCT	PRSI-PRINT,PTR
	ZERO?	P-MERGED \?CTR2
	GET	P-ITBL,P-NC2 >PTR
	GET	PTR,0
	EQUAL?	STACK,W?IT \?CCL3
?CTR2:	PRINTC	32
	CALL2	DPRINT,PRSI
	RSTACK	
?CCL3:	GET	P-ITBL,P-NC2L
	CALL	BUFFER-PRINT,PTR,STACK,FALSE-VALUE
	RSTACK	


	.FUNCT	THIS-IT?,OBJ,SYNS,CNT
	FSET?	OBJ,INVISIBLE /FALSE
	GETPT	OBJ,P?SYNONYM >SYNS
	ZERO?	SYNS /FALSE
	ZERO?	P-NAM /?CND5
	PTSIZE	SYNS
	DIV	STACK,2
	INTBL?	P-NAM,SYNS,STACK \FALSE
?CND5:	ZERO?	P-ADJ /?CND9
	GETPT	OBJ,P?ADJECTIVE >SYNS
	ZERO?	SYNS /FALSE
	PTSIZE	SYNS
	DIV	STACK,2
	INTBL?	P-ADJ,SYNS,STACK \FALSE
?CND9:	ZERO?	P-GWIMBIT /TRUE
	FSET?	OBJ,P-GWIMBIT /TRUE
	RFALSE	

	.ENDI
