

	.FUNCT	PICK-ONE,TBL,LENGTH,CNT,RND,MSG,RFROB
	GET	TBL,0 >LENGTH
	GET	TBL,1 >CNT
	DEC	'LENGTH
	ADD	TBL,2 >TBL
	MUL	CNT,2
	ADD	TBL,STACK >RFROB
	SUB	LENGTH,CNT
	RANDOM	STACK >RND
	GET	RFROB,RND >MSG
	GET	RFROB,1
	PUT	RFROB,RND,STACK
	PUT	RFROB,1,MSG
	INC	'CNT
	EQUAL?	CNT,LENGTH \?CND1
	SET	'CNT,0
?CND1:	PUT	TBL,0,CNT
	RETURN	MSG


	.FUNCT	DPRINT,OBJ
	EQUAL?	OBJ,SULTANS-WIFE \?CCL3
	PRINTI	"Sultan"
	ZERO?	MALE /?CCL6
	PRINTI	"'s wife #"
	JUMP	?CND4
?CCL6:	PRINTI	"ess' husband #"
?CND4:	PRINTN	CHOICE-NUMBER
	RTRUE	
?CCL3:	FSET?	OBJ,UNTEEDBIT \?CCL8
	GETP	OBJ,P?NO-T-DESC
	PRINT	STACK
	RTRUE	
?CCL8:	GETP	OBJ,P?SDESC
	ZERO?	STACK /?CCL10
	GETP	OBJ,P?SDESC
	PRINT	STACK
	RTRUE	
?CCL10:	PRINTD	OBJ
	RTRUE	


	.FUNCT	DPRINT-SIDEKICK
	CALL2	DPRINT,SIDEKICK
	RSTACK	


	.FUNCT	APRINT,OBJ
	FSET?	OBJ,NARTICLEBIT \?CCL3
	PRINTC	32
	JUMP	?CND1
?CCL3:	FSET?	OBJ,VOWELBIT \?CCL5
	PRINTI	" an "
	JUMP	?CND1
?CCL5:	PRINTI	" a "
?CND1:	CALL2	DPRINT,OBJ
	RSTACK	


	.FUNCT	TPRINT,OBJ
	FSET?	OBJ,NARTICLEBIT \?CCL3
	PRINTC	32
	JUMP	?CND1
?CCL3:	PRINTI	" the "
?CND1:	CALL2	DPRINT,OBJ
	RSTACK	


	.FUNCT	TPRINT-PRSO
	CALL2	TPRINT,PRSO
	RSTACK	


	.FUNCT	TPRINT-PRSI
	CALL2	TPRINT,PRSI
	RSTACK	


	.FUNCT	ARPRINT,OBJ
	ICALL2	APRINT,OBJ
	PRINT	PERIOD-CR
	RTRUE	


	.FUNCT	TRPRINT,OBJ
	ICALL2	TPRINT,OBJ
	PRINT	PERIOD-CR
	RTRUE	


	.FUNCT	GO
START::

?FCN:	GETB	0,30 >HOST
	GETB	0,33 >WIDTH
	CLEAR	-1
	ICALL1	INIT-STATUS-LINE
	SET	'HERE,WARNING
	ICALL1	UPDATE-STATUS-LINE
	PRINTI	"   Some material in this story may not be suitable for children, especially the parts involving sex, which no one should know anything about until reaching the age of eighteen (twenty-one in certain states). This story is also unsuitable for censors, members of the Moral Majority, and anyone else who thinks that sex is dirty rather than fun.
   The attitudes expressed and language used in this story are representative only of the views of the author, and in no way represent the views of Infocom, Inc. or its employees, many of whom are children, censors, and members of the Moral Majority. (But very few of whom, based on last year's Christmas Party, think that sex is dirty.)
   By now, all the folks who might be offended by "
	PRINT	LGOP-CAPS
	PRINTI	" have whipped their disk out of their drive and, evidence in hand, are indignantly huffing toward their dealer, their lawyer, or their favorite repression-oriented politico. So.."
	PRINT	HIT-RETURN
	PRINTI	"begin!"
	PUTB	P-INBUF,1,0
	READ	P-INBUF,P-LEXV
	ICALL1	CLEAR-SCREEN
	SET	'WINNER,PROTAGONIST
	SET	'HERE,JOES-BAR
	ICALL1	UPDATE-STATUS-LINE
	PRINTI	"The place: Upper Sandusky, Ohio. The time: 1936. The beer: at a nickel a mug, you don't ask for brand names. All you know is that your fifth one tasted as bad as the first."
	CRLF	
	CRLF	
	ICALL1	V-VERSION
	CRLF	
	ICALL1	V-LOOK
	ICALL1	I-URGE
	ICALL1	MAIN-LOOP
	JUMP	?FCN


	.FUNCT	CLEAR-SCREEN,CNT
	SET	'CNT,24
?PRG1:	CRLF	
	DEC	'CNT
	ZERO?	CNT \?PRG1
	RTRUE	


	.FUNCT	MAIN-LOOP,TRASH
?PRG1:	CALL1	MAIN-LOOP-1 >TRASH
	JUMP	?PRG1


	.FUNCT	MAIN-LOOP-1,ICNT,OCNT,NUM,CNT,OBJ,TBL,V,PTBL,OBJ1,TMP,?TMP1
	SET	'CNT,0
	SET	'OBJ,FALSE-VALUE
	SET	'PTBL,TRUE-VALUE
	CALL1	PARSER >P-WON
	ZERO?	P-WON /?CCL3
	GET	P-PRSI,P-MATCHLEN >ICNT
	GET	P-PRSO,P-MATCHLEN >OCNT
	ZERO?	P-IT-OBJECT /?CND4
	CALL2	ACCESSIBLE?,P-IT-OBJECT
	ZERO?	STACK /?CND4
	SET	'TMP,FALSE-VALUE
?PRG8:	IGRTR?	'CNT,ICNT /?REP9
	GET	P-PRSI,CNT
	EQUAL?	STACK,IT \?PRG8
	CALL1	TOO-DARK-FOR-IT?
	ZERO?	STACK \TRUE
	PUT	P-PRSI,CNT,P-IT-OBJECT
	SET	'TMP,TRUE-VALUE
?REP9:	ZERO?	TMP \?CND17
	SET	'CNT,0
?PRG19:	IGRTR?	'CNT,OCNT /?CND17
	GET	P-PRSO,CNT
	EQUAL?	STACK,IT \?PRG19
	CALL1	TOO-DARK-FOR-IT?
	ZERO?	STACK \TRUE
	PUT	P-PRSO,CNT,P-IT-OBJECT
?CND17:	SET	'CNT,0
?CND4:	ZERO?	OCNT \?CCL30
	SET	'NUM,OCNT
	JUMP	?CND28
?CCL30:	GRTR?	OCNT,1 \?CCL32
	SET	'TBL,P-PRSO
	ZERO?	ICNT \?CCL35
	SET	'OBJ,FALSE-VALUE
	JUMP	?CND33
?CCL35:	GET	P-PRSI,1 >OBJ
?CND33:	SET	'NUM,OCNT
	JUMP	?CND28
?CCL32:	GRTR?	ICNT,1 \?CCL37
	SET	'PTBL,FALSE-VALUE
	SET	'TBL,P-PRSI
	GET	P-PRSO,1 >OBJ
	SET	'NUM,ICNT
	JUMP	?CND28
?CCL37:	SET	'NUM,1
?CND28:	ZERO?	OBJ \?CND38
	EQUAL?	ICNT,1 \?CND38
	GET	P-PRSI,1 >OBJ
?CND38:	EQUAL?	PRSA,V?WALK \?CCL44
	CALL2	PERFORM-PRSA,PRSO >V
	JUMP	?CND42
?CCL44:	ZERO?	NUM \?CCL46
	GETB	P-SYNTAX,P-SBITS
	BAND	STACK,P-SONUMS
	ZERO?	STACK \?CCL49
	CALL1	PERFORM-PRSA >V
	SET	'PRSO,FALSE-VALUE
	JUMP	?CND42
?CCL49:	ZERO?	LIT \?CCL51
	PRINT	TOO-DARK
	CRLF	
	ICALL1	STOP
	JUMP	?CND42
?CCL51:	PRINTI	"There isn't anything to "
	GET	P-ITBL,P-VERBN >TMP
	EQUAL?	PRSA,V?TELL \?CCL54
	PRINTI	"talk to"
	JUMP	?CND52
?CCL54:	ZERO?	P-OFLAG \?CTR55
	ZERO?	P-MERGED /?CCL56
?CTR55:	GET	TMP,0
	PRINTB	STACK
	JUMP	?CND52
?CCL56:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	ICALL	WORD-PRINT,?TMP1,STACK
?CND52:	PRINTC	33
	CRLF	
	SET	'V,FALSE-VALUE
	ICALL1	STOP
	JUMP	?CND42
?CCL46:	SET	'P-NOT-HERE,0
	SET	'P-MULT,FALSE-VALUE
	GRTR?	NUM,1 \?CND59
	SET	'P-MULT,TRUE-VALUE
?CND59:	SET	'TMP,FALSE-VALUE
?PRG61:	IGRTR?	'CNT,NUM \?CCL65
	GRTR?	P-NOT-HERE,0 \?CCL68
	PRINTI	"[The "
	EQUAL?	P-NOT-HERE,NUM /?CND69
	PRINTI	"other "
?CND69:	PRINTI	"object"
	EQUAL?	P-NOT-HERE,1 /?CND71
	PRINTC	115
?CND71:	PRINTI	" that you mentioned "
	EQUAL?	P-NOT-HERE,1 /?CCL75
	PRINTI	"are"
	JUMP	?CND73
?CCL75:	PRINTI	"is"
?CND73:	PRINTI	"n't here.]"
	CRLF	
	JUMP	?CND42
?CCL68:	ZERO?	TMP \?CND42
	ICALL1	REFERRING
	JUMP	?CND42
?CCL65:	ZERO?	PTBL /?CCL79
	GET	P-PRSO,CNT >OBJ1
	JUMP	?CND77
?CCL79:	GET	P-PRSI,CNT >OBJ1
?CND77:	ZERO?	PTBL /?CCL82
	SET	'PRSO,OBJ1
	JUMP	?CND80
?CCL82:	SET	'PRSO,OBJ
?CND80:	ZERO?	PTBL /?CCL85
	SET	'PRSI,OBJ
	JUMP	?CND83
?CCL85:	SET	'PRSI,OBJ1
?CND83:	GRTR?	NUM,1 /?CCL87
	GET	P-ITBL,P-NC1
	GET	STACK,0
	EQUAL?	STACK,W?ALL,W?EVERYTHING \?CND86
?CCL87:	CALL2	DONT-ALL,OBJ1
	ZERO?	STACK \?PRG61
	EQUAL?	OBJ1,IT \?CCL95
	ICALL2	DPRINT,P-IT-OBJECT
	JUMP	?CND93
?CCL95:	EQUAL?	OBJ1,HIM \?CCL97
	ICALL2	DPRINT,P-HIM-OBJECT
	JUMP	?CND93
?CCL97:	EQUAL?	OBJ1,HER \?CCL99
	ICALL2	DPRINT,P-HER-OBJECT
	JUMP	?CND93
?CCL99:	ICALL2	DPRINT,OBJ1
?CND93:	PRINTI	": "
?CND86:	SET	'TMP,TRUE-VALUE
	CALL	PERFORM-PRSA,PRSO,PRSI >V
	EQUAL?	V,M-FATAL \?PRG61
?CND42:	EQUAL?	V,M-FATAL \?CND102
	SET	'P-CONT,FALSE-VALUE
?CND102:	CALL1	CLOCKER-VERB?
	ZERO?	STACK /?CND1
	EQUAL?	PRSA,V?TELL /?CND1
	ZERO?	P-WON /?CND1
	GETP	HERE,P?ACTION
	CALL	STACK,M-END >V
	JUMP	?CND1
?CCL3:	SET	'P-CONT,FALSE-VALUE
?CND1:	ZERO?	P-WON /?CND109
	CALL1	CLOCKER-VERB?
	ZERO?	STACK /?CND111
	CALL1	CLOCKER >V
?CND111:	SET	'P-PRSA-WORD,FALSE-VALUE
	SET	'PRSA,FALSE-VALUE
	SET	'PRSO,FALSE-VALUE
	SET	'PRSI,FALSE-VALUE
?CND109:	ZERO?	AWAITING-FAKE-ORPHAN /FALSE
	ZERO?	P-OFLAG \FALSE
	CALL1	ORPHAN-VERB
	RSTACK	


	.FUNCT	TOO-DARK-FOR-IT?
	ZERO?	LIT \FALSE
	CALL	ULTIMATELY-IN?,P-IT-OBJECT,WINNER
	ZERO?	STACK \FALSE
	IN?	WINNER,P-IT-OBJECT /FALSE
	PRINT	TOO-DARK
	CRLF	
	RTRUE	


	.FUNCT	DONT-ALL,OBJ1,L
	LOC	OBJ1 >L
	EQUAL?	OBJ1,NOT-HERE-OBJECT \?CCL3
	INC	'P-NOT-HERE
	RTRUE	
?CCL3:	EQUAL?	PRSA,V?TAKE \?CCL5
	ZERO?	PRSI /?CCL5
	IN?	PRSO,PRSI \TRUE
?CCL5:	CALL2	ACCESSIBLE?,OBJ1
	ZERO?	STACK /TRUE
	EQUAL?	P-GETFLAGS,P-ALL \FALSE
	ZERO?	PRSI /?CCL15
	EQUAL?	PRSO,PRSI /TRUE
?CCL15:	EQUAL?	PRSA,V?TAKE \?CCL19
	FSET?	OBJ1,TAKEBIT /?CCL22
	FSET?	OBJ1,TRYTAKEBIT \TRUE
?CCL22:	EQUAL?	L,WINNER,HERE,PRSI /?CCL26
	LOC	WINNER
	EQUAL?	L,STACK /?CCL26
	FSET?	L,SURFACEBIT \TRUE
	FSET?	L,TAKEBIT /TRUE
	RFALSE	
?CCL26:	ZERO?	PRSI \FALSE
	CALL2	ULTIMATELY-IN?,PRSO
	ZERO?	STACK /FALSE
	RTRUE	
?CCL19:	EQUAL?	PRSA,V?PUT-ON,V?PUT,V?DROP /?PRD41
	EQUAL?	PRSA,V?SGIVE,V?GIVE \?CCL39
?PRD41:	IN?	OBJ1,WINNER \TRUE
?CCL39:	EQUAL?	PRSA,V?PUT-ON,V?PUT \FALSE
	IN?	PRSO,WINNER /FALSE
	CALL	ULTIMATELY-IN?,PRSO,PRSI
	ZERO?	STACK \TRUE
	RFALSE	


	.FUNCT	CLOCKER-VERB?
	EQUAL?	PRSA,V?STATUS,V?HINT,V?VERSION /FALSE
	EQUAL?	PRSA,V?$COMMAND,V?$UNRECORD,V?$RECORD /FALSE
	EQUAL?	PRSA,V?RESTORE,V?SAVE,V?$RANDOM /FALSE
	EQUAL?	PRSA,V?SCRIPT,V?QUIT,V?RESTART /FALSE
	EQUAL?	PRSA,V?SUPERBRIEF,V?BRIEF,V?UNSCRIPT /FALSE
	EQUAL?	PRSA,V?TAME,V?LEWD,V?VERBOSE /FALSE
	EQUAL?	PRSA,V?SUGGESTIVE /FALSE
	RTRUE	


	.FUNCT	FAKE-ORPHAN,IT-WAS-USED,TMP,?TMP1
	ICALL	ORPHAN,P-SYNTAX,FALSE-VALUE
	GET	P-OTBL,P-VERBN >TMP
	PRINTI	"[Be specific: Wh"
	ZERO?	IT-WAS-USED /?CCL3
	PRINTI	"at object"
	JUMP	?CND1
?CCL3:	PRINTC	111
?CND1:	PRINTI	" do you want to "
	ZERO?	TMP \?CCL6
	PRINTI	"tell"
	JUMP	?CND4
?CCL6:	GETB	P-VTBL,2
	ZERO?	STACK \?CCL8
	GET	TMP,0
	PRINTB	STACK
	JUMP	?CND4
?CCL8:	GETB	TMP,2 >?TMP1
	GETB	TMP,3
	ICALL	WORD-PRINT,?TMP1,STACK
	PUTB	P-VTBL,2,0
?CND4:	SET	'P-OFLAG,TRUE-VALUE
	SET	'P-WON,FALSE-VALUE
	GETB	P-SYNTAX,P-SPREP1
	ICALL2	PREP-PRINT,STACK
	PRINTR	"?]"


	.FUNCT	PERFORM-PRSA,O,I
	CALL	PERFORM,PRSA,O,I
	RSTACK	


	.FUNCT	PERFORM,A,O,I,V,OA,OO,OI
	SET	'OA,PRSA
	SET	'OO,PRSO
	SET	'OI,PRSI
	SET	'PRSA,A
	ZERO?	P-WALK-DIR \?CND1
	EQUAL?	A,V?WALK /?CND1
	EQUAL?	IT,O,I \?CND5
	CALL2	VISIBLE?,P-IT-OBJECT
	ZERO?	STACK /?CCL9
	EQUAL?	IT,O \?CCL12
	SET	'O,P-IT-OBJECT
	JUMP	?CND5
?CCL12:	SET	'I,P-IT-OBJECT
?CND5:	EQUAL?	HIM,O,I \?CND18
	CALL2	VISIBLE?,P-HIM-OBJECT
	ZERO?	STACK /?CCL22
	EQUAL?	HIM,O \?CCL25
	SET	'O,P-HIM-OBJECT
	JUMP	?CND18
?CCL9:	ZERO?	I \?CCL15
	ICALL2	FAKE-ORPHAN,TRUE-VALUE
	RETURN	8
?CCL15:	ICALL1	REFERRING
	RETURN	8
?CCL25:	SET	'I,P-HIM-OBJECT
?CND18:	EQUAL?	HER,O,I \?CND1
	CALL2	VISIBLE?,P-HER-OBJECT
	ZERO?	STACK /?CCL35
	EQUAL?	HER,O \?CCL38
	SET	'O,P-HER-OBJECT
	JUMP	?CND1
?CCL22:	ZERO?	I \?CCL28
	ICALL1	FAKE-ORPHAN
	RETURN	8
?CCL28:	ICALL2	REFERRING,TRUE-VALUE
	RETURN	8
?CCL38:	SET	'I,P-HER-OBJECT
?CND1:	SET	'PRSO,O
	SET	'PRSI,I
	EQUAL?	A,V?WALK /?CND44
	ZERO?	P-WALK-DIR \?CND44
	EQUAL?	NOT-HERE-OBJECT,PRSO,PRSI \?CND44
	CALL	D-APPLY,STR?1,NOT-HERE-OBJECT-F >V
	ZERO?	V /?CND44
	SET	'P-WON,FALSE-VALUE
?CND44:	SET	'O,PRSO
	SET	'I,PRSI
	ICALL2	THIS-IS-IT,PRSI
	ICALL2	THIS-IS-IT,PRSO
	ZERO?	V \?CND51
	GETP	WINNER,P?ACTION
	CALL	D-APPLY,STR?2,STACK >V
?CND51:	ZERO?	V \?CND53
	GET	PREACTIONS,A
	CALL	D-APPLY,STR?3,STACK >V
?CND53:	ZERO?	V \?CND55
	ZERO?	I /?CND55
	GETP	I,P?ACTION
	CALL	D-APPLY,STR?4,STACK >V
?CND55:	ZERO?	V \?CND59
	ZERO?	O /?CND59
	EQUAL?	A,V?WALK /?CND59
	GETP	O,P?ACTION
	CALL	D-APPLY,STR?5,STACK >V
?CND59:	ZERO?	V \?CND64
	GET	ACTIONS,A
	CALL	D-APPLY,FALSE-VALUE,STACK >V
?CND64:	SET	'PRSA,OA
	SET	'PRSO,OO
	SET	'PRSI,OI
	RETURN	V
?CCL35:	ZERO?	I \?CCL41
	ICALL1	FAKE-ORPHAN
	RETURN	8
?CCL41:	ICALL2	REFERRING,TRUE-VALUE
	RETURN	8


	.FUNCT	D-APPLY,STR,FCN,FOO,RES
	ZERO?	FCN /FALSE
	ZERO?	FOO /?CCL6
	CALL	FCN,FOO >RES
	RETURN	RES
?CCL6:	CALL	FCN >RES
	RETURN	RES


	.FUNCT	DEQUEUE,RTN
	CALL2	QUEUED?,RTN >RTN
	ZERO?	RTN /FALSE
	PUT	RTN,C-RTN,0
	RTRUE	


	.FUNCT	QUEUED?,RTN,C,E
	ADD	C-TABLE,C-TABLELEN >E
	ADD	C-TABLE,C-INTS >C
?PRG1:	EQUAL?	C,E /FALSE
	GET	C,C-RTN
	EQUAL?	STACK,RTN \?CND3
	GET	C,C-TICK
	ZERO?	STACK /FALSE
	RETURN	C
?CND3:	ADD	C,C-INTLEN >C
	JUMP	?PRG1


	.FUNCT	RUNNING?,RTN,C,E
	ADD	C-TABLE,C-TABLELEN >E
	ADD	C-TABLE,C-INTS >C
?PRG1:	EQUAL?	C,E /FALSE
	GET	C,C-RTN
	EQUAL?	STACK,RTN \?CND3
	GET	C,C-TICK
	ZERO?	STACK /FALSE
	GET	C,C-TICK
	GRTR?	STACK,1 /FALSE
	RTRUE	
?CND3:	ADD	C,C-INTLEN >C
	JUMP	?PRG1


	.FUNCT	QUEUE,RTN,TICK,C,E,INT
	ADD	C-TABLE,C-TABLELEN >E
	ADD	C-TABLE,C-INTS >C
?PRG1:	EQUAL?	C,E \?CCL5
	ZERO?	INT /?CCL8
	SET	'C,INT
	JUMP	?CND6
?CCL8:	LESS?	C-INTS,C-INTLEN \?CND9
	PRINTI	"**Too many ints!**"
	CRLF	
?CND9:	SUB	C-INTS,C-INTLEN >C-INTS
	LESS?	C-INTS,C-MAXINTS \?CND11
	SET	'C-MAXINTS,C-INTS
?CND11:	ADD	C-TABLE,C-INTS >INT
?CND6:	PUT	INT,C-RTN,RTN
	JUMP	?REP2
?CCL5:	GET	C,C-RTN
	EQUAL?	STACK,RTN \?CCL14
	SET	'INT,C
?REP2:	GRTR?	INT,CLOCK-HAND \?CND16
	ADD	TICK,3
	SUB	0,STACK >TICK
?CND16:	PUT	INT,C-TICK,TICK
	RETURN	INT
?CCL14:	GET	C,C-RTN
	ZERO?	STACK \?CND3
	SET	'INT,C
?CND3:	ADD	C,C-INTLEN >C
	JUMP	?PRG1


	.FUNCT	CLOCKER,E,TICK,RTN,FLG,Q?,OWINNER
	ZERO?	CLOCK-WAIT /?CND1
	SET	'CLOCK-WAIT,FALSE-VALUE
	RFALSE	
?CND1:	ADD	C-TABLE,C-INTS >CLOCK-HAND
	ADD	C-TABLE,C-TABLELEN >E
	SET	'OWINNER,WINNER
	SET	'WINNER,PROTAGONIST
?PRG3:	EQUAL?	CLOCK-HAND,E \?CCL7
	SET	'CLOCK-HAND,E
	INC	'MOVES
	SET	'WINNER,OWINNER
	RETURN	FLG
?CCL7:	GET	CLOCK-HAND,C-RTN
	ZERO?	STACK /?CND5
	GET	CLOCK-HAND,C-TICK >TICK
	LESS?	TICK,-1 \?CCL11
	SUB	0,TICK
	SUB	STACK,3
	PUT	CLOCK-HAND,C-TICK,STACK
	SET	'Q?,CLOCK-HAND
	JUMP	?CND5
?CCL11:	ZERO?	TICK /?CND5
	GRTR?	TICK,0 \?CND13
	DEC	'TICK
	PUT	CLOCK-HAND,C-TICK,TICK
?CND13:	ZERO?	TICK /?CND15
	SET	'Q?,CLOCK-HAND
?CND15:	GRTR?	TICK,0 /?CND5
	GET	CLOCK-HAND,C-RTN >RTN
	ZERO?	TICK \?CND19
	PUT	CLOCK-HAND,C-RTN,0
?CND19:	CALL	RTN
	ZERO?	STACK /?CND21
	SET	'FLG,TRUE-VALUE
?CND21:	ZERO?	Q? \?CND5
	GET	CLOCK-HAND,C-RTN
	ZERO?	STACK /?CND5
	SET	'Q?,TRUE-VALUE
?CND5:	ADD	CLOCK-HAND,C-INTLEN >CLOCK-HAND
	ZERO?	Q? \?PRG3
	ADD	C-INTS,C-INTLEN >C-INTS
	JUMP	?PRG3

	.ENDI
